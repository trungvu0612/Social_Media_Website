{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\page\\\\register\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\nimport { FormProvider, useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  // Context\n  const {\n    loadUser\n  } = useContext(AuthContext);\n  const methods = useForm(); // local state\n\n  const [register, setRegister] = useState({\n    userEmail: \"\",\n    userPassword: \"\",\n    confirmPassword: \"\",\n    userName: \"\",\n    userAvatar: \"\"\n  }); //Router\n\n  const history = useHistory(); // get data as user input\n\n  const onChangeRegisterForm = function (event) {\n    setRegister({ ...register,\n      [event.target.name]: event.target.value\n    });\n    console.log(register);\n  }; //get file as user input\n\n\n  const onChangeFileUserForm = function (event) {\n    setRegister({\n      userAvatar: event.target.files[0]\n    });\n    console.log(event.target.files[0]); // if (event.target.files && event.target.files[0]) {\n    //   let reader = new FileReader();\n    //   let file = event.target.files[0];\n    //   reader.onloadend = () => {\n    //     setRegister({\n    //       ...register,\n    //       userAvatar: file,\n    //     });\n    //   };\n    //   reader.readAsDataURL(file);\n  }; // when the data changes, add new data for register state\n\n\n  const {\n    userEmail,\n    userPassword,\n    confirmPassword,\n    userName,\n    userAvatar\n  } = register;\n\n  const userRegister = async function (event) {\n    event.preventDefault();\n    const formData = new FormData(); // formData.append(\"userEmail\", register.userEmail);\n    // formData.append(\"userPassword\", register.userPassword);\n    // formData.append(\"confirmPassword\", register.confirmPassword);\n    // formData.append(\"userName\", register.userName);\n\n    formData.append(\"userAvatar\", register.userAvatar);\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n    axios.post(`${apiUrl}/auth/register`, formData, config).then(response => {\n      console.log(response); // if (response.data.success)\n      //   localStorage.setItem(\n      //     LOCAL_STORAGE_TOKEN_NAME,\n      //     response.data.accessToken\n      //   );\n      // console.log(response.data);\n      // console.log(register);\n      // console.log(register.userName);\n      // loadUser();\n      // return response.data;\n    }); // const registerUser = async (userForm) => {\n    //   try {\n    //     const response = await axios.post(\n    //       `${apiUrl}/auth/register`,\n    //       formData,\n    //       config\n    //     );\n    //     console.log(response.data);\n    //     console.log(register);\n    //     console.log(register.userName);\n    //     if (response.data.success)\n    //       localStorage.setItem(\n    //         LOCAL_STORAGE_TOKEN_NAME,\n    //         response.data.accessToken\n    //       );\n    //     await loadUser();\n    //     return response.data;\n    //   } catch (error) {\n    //     if (error.response.data) return error.response.data;\n    //     else return { success: false, message: error.message };\n    //   }\n    // };\n    // if (userPassword != confirmPassword) {\n    //   alert(\"Passwords do not match\");\n    // }\n    // try {\n    //   const registerData = await registerUser(register);\n    //   if (!registerData.success) {\n    //     alert(\"Registration failed\");\n    //     console.log(registerData.message);\n    //   }\n    //   history.push(\"/login\");\n    // } catch (e) {\n    //   console.log(e);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"l-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: userRegister,\n        enctype: \"multipart/form-data\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/logo1.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form__title\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userEmail\",\n            value: userEmail,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userPassword\",\n            value: userPassword,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userName\",\n            value: userName,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form__input\",\n            onChange: onChangeFileUserForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Your avartar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"form__button\",\n          defaultValue: \"Sign In\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"6VUSVAKo8dAe+cDczHa+pdNTE7E=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/page/register/index.jsx"],"names":["axios","React","useContext","useState","useHistory","AuthContext","apiUrl","LOCAL_STORAGE_TOKEN_NAME","FormProvider","useForm","Register","loadUser","methods","register","setRegister","userEmail","userPassword","confirmPassword","userName","userAvatar","history","onChangeRegisterForm","event","target","name","value","console","log","onChangeFileUserForm","files","userRegister","preventDefault","formData","FormData","append","config","headers","post","then","response"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\n\r\nexport default function Register() {\r\n  // Context\r\n  const { loadUser } = useContext(AuthContext);\r\n\r\n  const methods = useForm();\r\n\r\n  // local state\r\n  const [register, setRegister] = useState({\r\n    userEmail: \"\",\r\n    userPassword: \"\",\r\n    confirmPassword: \"\",\r\n    userName: \"\",\r\n    userAvatar: \"\",\r\n  });\r\n\r\n  //Router\r\n  const history = useHistory();\r\n\r\n  // get data as user input\r\n  const onChangeRegisterForm = function (event) {\r\n    setRegister({ ...register, [event.target.name]: event.target.value });\r\n    console.log(register);\r\n  };\r\n\r\n  //get file as user input\r\n  const onChangeFileUserForm = function (event) {\r\n    setRegister({\r\n      userAvatar: event.target.files[0],\r\n    });\r\n    console.log(event.target.files[0]);\r\n    // if (event.target.files && event.target.files[0]) {\r\n    //   let reader = new FileReader();\r\n    //   let file = event.target.files[0];\r\n    //   reader.onloadend = () => {\r\n    //     setRegister({\r\n    //       ...register,\r\n    //       userAvatar: file,\r\n    //     });\r\n    //   };\r\n    //   reader.readAsDataURL(file);\r\n  };\r\n\r\n  // when the data changes, add new data for register state\r\n\r\n  const { userEmail, userPassword, confirmPassword, userName, userAvatar } =\r\n    register;\r\n\r\n  const userRegister = async function (event) {\r\n    event.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    // formData.append(\"userEmail\", register.userEmail);\r\n    // formData.append(\"userPassword\", register.userPassword);\r\n    // formData.append(\"confirmPassword\", register.confirmPassword);\r\n    // formData.append(\"userName\", register.userName);\r\n    formData.append(\"userAvatar\", register.userAvatar);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    axios.post(`${apiUrl}/auth/register`, formData, config).then((response) => {\r\n      console.log(response);\r\n      // if (response.data.success)\r\n      //   localStorage.setItem(\r\n      //     LOCAL_STORAGE_TOKEN_NAME,\r\n      //     response.data.accessToken\r\n      //   );\r\n      // console.log(response.data);\r\n      // console.log(register);\r\n      // console.log(register.userName);\r\n\r\n      // loadUser();\r\n\r\n      // return response.data;\r\n    });\r\n\r\n    // const registerUser = async (userForm) => {\r\n    //   try {\r\n    //     const response = await axios.post(\r\n    //       `${apiUrl}/auth/register`,\r\n    //       formData,\r\n    //       config\r\n    //     );\r\n    //     console.log(response.data);\r\n    //     console.log(register);\r\n    //     console.log(register.userName);\r\n\r\n    //     if (response.data.success)\r\n    //       localStorage.setItem(\r\n    //         LOCAL_STORAGE_TOKEN_NAME,\r\n    //         response.data.accessToken\r\n    //       );\r\n\r\n    //     await loadUser();\r\n\r\n    //     return response.data;\r\n    //   } catch (error) {\r\n    //     if (error.response.data) return error.response.data;\r\n    //     else return { success: false, message: error.message };\r\n    //   }\r\n    // };\r\n\r\n    // if (userPassword != confirmPassword) {\r\n    //   alert(\"Passwords do not match\");\r\n    // }\r\n\r\n    // try {\r\n    //   const registerData = await registerUser(register);\r\n    //   if (!registerData.success) {\r\n    //     alert(\"Registration failed\");\r\n    //     console.log(registerData.message);\r\n    //   }\r\n    //   history.push(\"/login\");\r\n    // } catch (e) {\r\n    //   console.log(e);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"l-form\">\r\n        <form\r\n          onSubmit={userRegister}\r\n          enctype=\"multipart/form-data\"\r\n          className=\"form\"\r\n        >\r\n          <img src=\"/img/logo1.svg\" alt=\"\" />\r\n          <h2 className=\"form__title\">Register</h2>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userEmail\"\r\n              value={userEmail}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Email\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userPassword\"\r\n              value={userPassword}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Password\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Confirm Password\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userName\"\r\n              value={userName}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Your name\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"form__input\"\r\n              onChange={onChangeFileUserForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Your avartar\r\n            </label>\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            className=\"form__button\"\r\n            defaultValue=\"Sign In\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}