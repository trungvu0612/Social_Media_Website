{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\authContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useEffect } from \"react\";\nimport { authReducer } from \"../reducers/authReducer\";\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"./constants\";\nimport axios from \"axios\";\nimport setAuthToken from \"./setAuthToken\"; // create context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(); // use useReducer manage the state of the web\n\nconst AuthContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [authState, dispatch] = useReducer(authReducer, {\n    // when the user is not logged in to the web\n    authLoading: true,\n    //  the user is not authenticated\n    isAuthenticated: false,\n    // without any user information\n    user: null\n  }); // Authenticate user\n\n  const loadUser = async () => {\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\n      setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n    }\n\n    try {\n      const response = await axios.get(`${apiUrl}/auth`);\n\n      if (response.data.success) {\n        dispatch({\n          type: \"SET_AUTH\",\n          payload: {\n            isAuthenticated: true,\n            user: response.data.user\n          }\n        });\n      }\n    } catch (error) {\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n      setAuthToken(null);\n      dispatch({\n        type: \"SET_AUTH\",\n        payload: {\n          isAuthenticated: false,\n          user: null\n        }\n      });\n    }\n  };\n\n  useEffect(() => loadUser(), []); // Login\n\n  const loginUser = async userForm => {\n    try {\n      // call api with axios\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\n      if (response.data.success) localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken);\n      await loadUser();\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;else return {\n        success: false,\n        message: error.message\n      };\n    }\n  }; // Register\n\n\n  const registerUser = async userForm => {\n    try {\n      const response = await axios.post(`${apiUrl}/auth/register`, userForm);\n      if (response.data.success) localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken);\n      await loadUser();\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;else return {\n        success: false,\n        message: error.message\n      };\n    }\n  }; // Logout\n\n\n  const logoutUser = () => {\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n    dispatch({\n      type: \"SET_AUTH\",\n      payload: {\n        isAuthenticated: false,\n        user: null\n      }\n    });\n  }; // Context data\n\n\n  const authContextData = {\n    loginUser,\n    registerUser,\n    logoutUser,\n    authState\n  }; // Return provider\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextData,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"2MSqB/BCkm8kH+wj1Fnpxp5w0Ok=\");\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/authContext.js"],"names":["createContext","useReducer","useEffect","authReducer","apiUrl","LOCAL_STORAGE_TOKEN_NAME","axios","setAuthToken","AuthContext","AuthContextProvider","children","authState","dispatch","authLoading","isAuthenticated","user","loadUser","localStorage","response","get","data","success","type","payload","error","removeItem","loginUser","userForm","post","setItem","accessToken","message","registerUser","logoutUser","authContextData"],"mappings":"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","sourcesContent":["import { createContext, useReducer, useEffect } from \"react\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"./constants\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\n// create context\r\nexport const AuthContext = createContext();\r\n\r\n// use useReducer manage the state of the web\r\nconst AuthContextProvider = ({ children }) => {\r\n  const [authState, dispatch] = useReducer(authReducer, {\r\n    // when the user is not logged in to the web\r\n    authLoading: true,\r\n    //  the user is not authenticated\r\n    isAuthenticated: false,\r\n    // without any user information\r\n    user: null,\r\n  });\r\n\r\n  // Authenticate user\r\n  const loadUser = async () => {\r\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\r\n      setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/auth`);\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: \"SET_AUTH\",\r\n          payload: { isAuthenticated: true, user: response.data.user },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n      setAuthToken(null);\r\n      dispatch({\r\n        type: \"SET_AUTH\",\r\n        payload: { isAuthenticated: false, user: null },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => loadUser(), []);\r\n\r\n  // Login\r\n  const loginUser = async (userForm) => {\r\n    try {\r\n      // call api with axios\r\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\r\n      if (response.data.success)\r\n        localStorage.setItem(\r\n          LOCAL_STORAGE_TOKEN_NAME,\r\n          response.data.accessToken\r\n        );\r\n\r\n      await loadUser();\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response.data) return error.response.data;\r\n      else return { success: false, message: error.message };\r\n    }\r\n  };\r\n\r\n  // Register\r\n  const registerUser = async (userForm) => {\r\n    try {\r\n      const response = await axios.post(`${apiUrl}/auth/register`, userForm);\r\n      if (response.data.success)\r\n        localStorage.setItem(\r\n          LOCAL_STORAGE_TOKEN_NAME,\r\n          response.data.accessToken\r\n        );\r\n\r\n      await loadUser();\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response.data) return error.response.data;\r\n      else return { success: false, message: error.message };\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logoutUser = () => {\r\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n    dispatch({\r\n      type: \"SET_AUTH\",\r\n      payload: { isAuthenticated: false, user: null },\r\n    });\r\n  };\r\n\r\n  // Context data\r\n  const authContextData = { loginUser, registerUser, logoutUser, authState };\r\n\r\n  // Return provider\r\n  return (\r\n    <AuthContext.Provider value={authContextData}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}