{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\cmtContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useReducer } from \"react\";\nimport { COMMENTS_LOADED_SUCCESS, POSTS_LOADED_FAIL } from \"../contexts/constants\";\nimport { commentReducer } from \"../reducers/cmtReducer\";\nimport { apiUrl } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommentContext = /*#__PURE__*/createContext();\n\nconst CommentContextProvider = ({\n  children\n}) => {\n  _s();\n\n  // State\n  const [commentState, dispatch] = useReducer(commentReducer, {\n    comment: null,\n    comments: [],\n    commentsLoading: true\n  });\n  console.log(commentState.comments); // Get all posts\n\n  const getComments = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/comments/datacmts`);\n\n      if (response.data.success) {\n        console.log(\"1\");\n        dispatch({\n          type: COMMENTS_LOADED_SUCCESS,\n          payload: response.data.comments\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: POSTS_LOADED_FAIL\n      });\n    }\n  }; // post context data\n\n\n  const postContextData = {\n    commentState,\n    getComments\n  };\n  return /*#__PURE__*/_jsxDEV(CommentContext.Provider, {\n    value: postContextData,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentContextProvider, \"D9uheR9/QLvcaNKx77Y1/AiTAWI=\");\n\n_c = CommentContextProvider;\nexport default CommentContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentContextProvider\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/cmtContext.js"],"names":["axios","createContext","useReducer","COMMENTS_LOADED_SUCCESS","POSTS_LOADED_FAIL","commentReducer","apiUrl","CommentContext","CommentContextProvider","children","commentState","dispatch","comment","comments","commentsLoading","console","log","getComments","response","get","data","success","type","payload","error","postContextData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SACEC,uBADF,EAEEC,iBAFF,QAGO,uBAHP;AAIA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,OAAO,MAAMC,cAAc,gBAAGN,aAAa,EAApC;;AAEP,MAAMO,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/C;AACA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BT,UAAU,CAACG,cAAD,EAAiB;AAC1DO,IAAAA,OAAO,EAAE,IADiD;AAE1DC,IAAAA,QAAQ,EAAE,EAFgD;AAG1DC,IAAAA,eAAe,EAAE;AAHyC,GAAjB,CAA3C;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACG,QAAzB,EAR+C,CAS/C;;AACA,QAAMI,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAW,GAAEb,MAAO,oBAApB,CAAvB;;AACA,UAAIY,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBN,QAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAL,QAAAA,QAAQ,CAAC;AACPW,UAAAA,IAAI,EAAEnB,uBADC;AAEPoB,UAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcP;AAFhB,SAAD,CAAR;AAID;AACF,KATD,CASE,OAAOW,KAAP,EAAc;AACdb,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAElB;AAAR,OAAD,CAAR;AACD;AACF,GAbD,CAV+C,CAyB/C;;;AACA,QAAMqB,eAAe,GAAG;AACtBf,IAAAA,YADsB;AAEtBO,IAAAA;AAFsB,GAAxB;AAIA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEQ,eAAhC;AAAA,eACG,GADH,EAEGhB,QAFH,EAEa,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CApCD;;GAAMD,sB;;KAAAA,sB;AAsCN,eAAeA,sBAAf","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useReducer } from \"react\";\r\nimport {\r\n  COMMENTS_LOADED_SUCCESS,\r\n  POSTS_LOADED_FAIL,\r\n} from \"../contexts/constants\";\r\nimport { commentReducer } from \"../reducers/cmtReducer\";\r\n\r\nimport { apiUrl } from \"./constants\";\r\n\r\nexport const CommentContext = createContext();\r\n\r\nconst CommentContextProvider = ({ children }) => {\r\n  // State\r\n  const [commentState, dispatch] = useReducer(commentReducer, {\r\n    comment: null,\r\n    comments: [],\r\n    commentsLoading: true,\r\n  });\r\n\r\n  console.log(commentState.comments);\r\n  // Get all posts\r\n  const getComments = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/comments/datacmts`);\r\n      if (response.data.success) {\r\n        console.log(\"1\");\r\n        dispatch({\r\n          type: COMMENTS_LOADED_SUCCESS,\r\n          payload: response.data.comments,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: POSTS_LOADED_FAIL });\r\n    }\r\n  };\r\n\r\n  // post context data\r\n  const postContextData = {\r\n    commentState,\r\n    getComments,\r\n  };\r\n  return (\r\n    <CommentContext.Provider value={postContextData}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </CommentContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CommentContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}