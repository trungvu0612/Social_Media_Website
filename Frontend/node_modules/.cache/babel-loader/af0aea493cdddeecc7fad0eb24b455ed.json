{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\page\\\\home\\\\component\\\\postPerson.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport PostItems from \"../../../component/postItems\";\nimport { PostContext } from \"../../../../src/contexts/postContext\";\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\nimport { AuthContext } from \"../../../contexts/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostPerson() {\n  _s();\n\n  // get global data by useContext\n  const {\n    postState: {\n      posts,\n      postsLoading\n    },\n    getPosts\n  } = useContext(PostContext);\n  const {\n    authState: {\n      user: {\n        _id: userId\n      }\n    }\n  } = useContext(AuthContext); // start get all posts\n\n  useEffect(() => getPosts(), []);\n  console.log(userId); // check id for render post data\n\n  const checkIdpost = posts.filter(post => {\n    return posts.user._id === userId;\n  });\n\n  if (postsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100vh\",\n        position: \"absolute\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Ripple, {\n        style: {\n          top: \"50%\",\n          left: \"50%\",\n          position: \"relative\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        color: \"#be97e8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \" \", \";\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postperson post-list post-list-1\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItems, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(PostPerson, \"YPg3GXrJ7gnBlxS+7l6u7H2cpUI=\");\n\n_c = PostPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPerson\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/page/home/component/postPerson.jsx"],"names":["React","useContext","useEffect","PostItems","PostContext","Ripple","AuthContext","PostPerson","postState","posts","postsLoading","getPosts","authState","user","_id","userId","console","log","checkIdpost","filter","post","width","height","position","top","left","transform","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,WAAT,QAA4B,+BAA5B;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC;AACA,QAAM;AACJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KADP;AAEJC,IAAAA;AAFI,MAGFV,UAAU,CAACG,WAAD,CAHd;AAIA,QAAM;AACJQ,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AAAEC,QAAAA,GAAG,EAAEC;AAAP;AADG;AADP,MAIFd,UAAU,CAACK,WAAD,CAJd,CANmC,CAYnC;;AACAJ,EAAAA,SAAS,CAAC,MAAMS,QAAQ,EAAf,EAAmB,EAAnB,CAAT;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAdmC,CAgBnC;;AACA,QAAMG,WAAW,GAAGT,KAAK,CAACU,MAAN,CAAcC,IAAD,IAAU;AACzC,WAAOX,KAAK,CAACI,IAAN,CAAWC,GAAX,KAAmBC,MAA1B;AACD,GAFmB,CAApB;;AAIA,MAAIL,YAAJ,EAAkB;AAChB,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,QAAQ,EAAE;AAA5C,OAAZ;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,GAAG,EAAE,KADA;AAELC,UAAAA,IAAI,EAAE,KAFD;AAGLF,UAAAA,QAAQ,EAAE,UAHL;AAILG,UAAAA,SAAS,EAAE;AAJN,SADT;AAOE,QAAA,KAAK,EAAC;AAPR;AAAA;AAAA;AAAA;AAAA,cADF,EASK,GATL,OAUI,GAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfD,MAeO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA,gBACGjB,KAAK,CAACkB,GAAN,CAAWP,IAAD,iBACT,QAAC,SAAD;AAAW,QAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;AACF;;GA7CuBb,U;;KAAAA,U","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport PostItems from \"../../../component/postItems\";\r\nimport { PostContext } from \"../../../../src/contexts/postContext\";\r\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\r\nimport { AuthContext } from \"../../../contexts/authContext\";\r\n\r\nexport default function PostPerson() {\r\n  // get global data by useContext\r\n  const {\r\n    postState: { posts, postsLoading },\r\n    getPosts,\r\n  } = useContext(PostContext);\r\n  const {\r\n    authState: {\r\n      user: { _id: userId },\r\n    },\r\n  } = useContext(AuthContext);\r\n\r\n  // start get all posts\r\n  useEffect(() => getPosts(), []);\r\n  console.log(userId);\r\n\r\n  // check id for render post data\r\n  const checkIdpost = posts.filter((post) => {\r\n    return posts.user._id === userId;\r\n  });\r\n\r\n  if (postsLoading) {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100vh\", position: \"absolute\" }}>\r\n        <Ripple\r\n          style={{\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: \"relative\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n          color=\"#be97e8\"\r\n        />{\" \"}\r\n        ;{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"postperson post-list post-list-1\">\r\n        {posts.map((post) => (\r\n          <PostItems post={post} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}