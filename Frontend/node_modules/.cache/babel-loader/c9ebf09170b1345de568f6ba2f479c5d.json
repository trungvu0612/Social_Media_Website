{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\cmtContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useReducer } from \"react\";\nimport { COMMENTS_LOADED_SUCCESS, POSTS_LOADED_FAIL } from \"../contexts/constants\";\nimport { commentReducer } from \"../reducers/cmtReducer\";\nimport { apiUrl } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommentContext = /*#__PURE__*/createContext();\n\nconst CommentContextProvider = ({\n  children\n}) => {\n  _s();\n\n  // State\n  const [commentState, dispatch] = useReducer(commentReducer, {\n    comment: null,\n    comments: [],\n    commentsLoading: true\n  }); // Get all posts\n\n  const getComments = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/comments/datacmts`);\n\n      if (response.data.success) {\n        console.log(response.data.comments);\n        dispatch({\n          type: COMMENTS_LOADED_SUCCESS,\n          payload: response.data.comments\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: POSTS_LOADED_FAIL\n      });\n    }\n  }; // post context data\n\n\n  const postContextData = {\n    commentState,\n    getComments\n  };\n  return /*#__PURE__*/_jsxDEV(CommentContext.Provider, {\n    value: postContextData,\n    children: [\" \", \" \", \" \", children, \" \", \" \", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 14\n  }, this);\n};\n\n_s(CommentContextProvider, \"IskuCOhmPVSkvDnSqdJD7BF7N1o=\");\n\n_c = CommentContextProvider;\nexport default CommentContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentContextProvider\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/cmtContext.js"],"names":["axios","createContext","useReducer","COMMENTS_LOADED_SUCCESS","POSTS_LOADED_FAIL","commentReducer","apiUrl","CommentContext","CommentContextProvider","children","commentState","dispatch","comment","comments","commentsLoading","getComments","response","get","data","success","console","log","type","payload","error","postContextData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SACIC,uBADJ,EAEIC,iBAFJ,QAGO,uBAHP;AAIA,SAASC,cAAT,QAA+B,wBAA/B;AAEA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,OAAO,MAAMC,cAAc,gBAAGN,aAAa,EAApC;;AAEP,MAAMO,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C;AACA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BT,UAAU,CAACG,cAAD,EAAiB;AACxDO,IAAAA,OAAO,EAAE,IAD+C;AAExDC,IAAAA,QAAQ,EAAE,EAF8C;AAGxDC,IAAAA,eAAe,EAAE;AAHuC,GAAjB,CAA3C,CAF6C,CAQ7C;;AACA,QAAMC,WAAW,GAAG,YAAW;AAC3B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEX,MAAO,oBAApB,CAAvB;;AACA,UAAIU,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAAT,CAAcL,QAA1B;AACAF,QAAAA,QAAQ,CAAC;AACLW,UAAAA,IAAI,EAAEnB,uBADD;AAELoB,UAAAA,OAAO,EAAEP,QAAQ,CAACE,IAAT,CAAcL;AAFlB,SAAD,CAAR;AAIH;AACJ,KATD,CASE,OAAOW,KAAP,EAAc;AACZb,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAElB;AAAR,OAAD,CAAR;AACH;AACJ,GAbD,CAT6C,CAwB7C;;;AACA,QAAMqB,eAAe,GAAG;AACpBf,IAAAA,YADoB;AAEpBK,IAAAA;AAFoB,GAAxB;AAIA,sBAAS,QACL,cADK,CACU,QADV;AACmB,IAAA,KAAK,EAAKU,eAD7B;AAAA,oBACmD,GADnD,OAC2DhB,QAD3D,OACwE,GADxE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAIH,CAjCD;;GAAMD,sB;;KAAAA,sB;AAmCN,eAAeA,sBAAf","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useReducer } from \"react\";\r\nimport {\r\n    COMMENTS_LOADED_SUCCESS,\r\n    POSTS_LOADED_FAIL,\r\n} from \"../contexts/constants\";\r\nimport { commentReducer } from \"../reducers/cmtReducer\";\r\n\r\nimport { apiUrl } from \"./constants\";\r\n\r\nexport const CommentContext = createContext();\r\n\r\nconst CommentContextProvider = ({ children }) => {\r\n    // State\r\n    const [commentState, dispatch] = useReducer(commentReducer, {\r\n        comment: null,\r\n        comments: [],\r\n        commentsLoading: true,\r\n    });\r\n\r\n    // Get all posts\r\n    const getComments = async() => {\r\n        try {\r\n            const response = await axios.get(`${apiUrl}/comments/datacmts`);\r\n            if (response.data.success) {\r\n                console.log(response.data.comments);\r\n                dispatch({\r\n                    type: COMMENTS_LOADED_SUCCESS,\r\n                    payload: response.data.comments,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: POSTS_LOADED_FAIL });\r\n        }\r\n    };\r\n\r\n    // post context data\r\n    const postContextData = {\r\n        commentState,\r\n        getComments,\r\n    };\r\n    return ( <\r\n        CommentContext.Provider value = { postContextData } > { \" \" } { children } { \" \" } <\r\n        /CommentContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CommentContextProvider;"]},"metadata":{},"sourceType":"module"}