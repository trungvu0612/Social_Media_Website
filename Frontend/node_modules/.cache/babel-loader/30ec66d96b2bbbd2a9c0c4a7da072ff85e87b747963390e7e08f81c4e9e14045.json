{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\page\\\\admin\\\\component\\\\categorymusic\\\\listMusicAdmin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport { apiUploadFileMp3, apiUploadImgMp3 } from \"../../../../contexts/constants\";\nimport { apiUrl, UPDATE_MUSIC } from \"../../../../contexts/constants\";\nimport { MusicContext } from \"../../../../contexts/musicContext\";\nimport axios from \"axios\";\nimport PopupMusic from \"./popupMusic\";\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListMusicAdmin(_ref) {\n  _s();\n  let {\n    music: {\n      _id,\n      musicName,\n      musicAuthor,\n      musicImg,\n      musicFile\n    }\n  } = _ref;\n  const {\n    music,\n    dispatch,\n    findIDMusic\n  } = useContext(MusicContext);\n  function editMussic(musicId) {\n    findIDMusic(musicId);\n    const popUpEdit = document.querySelector(\".edit-popup\");\n    setTimeout(() => popUpEdit.classList.add(\"active\"), 500);\n  }\n\n  // // close popup\n  // function outPopupMusic(musicId) {\n  //   const popUpEdit = document.querySelector(\".edit-popup\");\n  //   popUpEdit.classList.remove(\"active\");\n  // }\n\n  // // local state\n  // const [updateMusic, setupdateMusic] = useState({\n  //   musicName: \"\",\n  //   musicAuthor: \"\",\n  //   musicImg: \"\",\n  //   musicFile: \"\",\n  //   musicCategory: \"\",\n  // });\n\n  // // get data as user input\n  // const onChangeMusicForm = function (event) {\n  //   setupdateMusic({ ...updateMusic, [event.target.name]: event.target.value });\n  // };\n\n  // //get img file as user input\n  // const onChangeFileImgForm = function (event) {\n  //   setupdateMusic({ ...updateMusic, musicImg: event.target.files[0] });\n  // };\n\n  // //get mp3 file as user input\n  // const onChangeMp3Form = function (event) {\n  //   setupdateMusic({ ...updateMusic, musicFile: event.target.files[0] });\n  // };\n\n  // const onSubmitUpdate = function (e) {\n  //   e.preventDefault();\n\n  //   // initialize formdata to store values in state and assign those values to name in input\n  //   const formData = new FormData();\n  //   formData.append(\"musicName\", updateMusic.musicName);\n  //   formData.append(\"musicAuthor\", updateMusic.musicAuthor);\n  //   formData.append(\"musicImg\", updateMusic.musicImg);\n  //   formData.append(\"musicFile\", updateMusic.musicFile);\n  //   formData.append(\"musicCategory\", updateMusic.musicCategory);\n\n  //   axios\n  //     .put(`${apiUrl}/music/update/`, formData)\n  //     .then((response) => {\n  //       if (response.data.success) {\n  //         dispatch({ type: UPDATE_MUSIC, payload: response.data.music });\n  //         return response.data;\n  //       }\n  //     })\n  //     .catch((error) => {\n  //       return error.response\n  //         ? error.response\n  //         : { success: false, message: \"Server error\" };\n  //     });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"like\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"img\",\n      src: `${apiUploadImgMp3}${musicImg}`,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"name\",\n      children: musicName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"author\",\n      children: musicAuthor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      className: \"audio\",\n      src: `${apiUploadFileMp3}${musicFile}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"item-create edit\",\n      onClick: editMussic.bind(this, _id),\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PopupMusic, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(ListMusicAdmin, \"noqSbKxKU4XTxJvfG0sjtpQLi5E=\");\n_c = ListMusicAdmin;\nvar _c;\n$RefreshReg$(_c, \"ListMusicAdmin\");","map":{"version":3,"names":["React","useContext","useState","apiUploadFileMp3","apiUploadImgMp3","apiUrl","UPDATE_MUSIC","MusicContext","axios","PopupMusic","Ripple","ListMusicAdmin","music","_id","musicName","musicAuthor","musicImg","musicFile","dispatch","findIDMusic","editMussic","musicId","popUpEdit","document","querySelector","setTimeout","classList","add","bind"],"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/page/admin/component/categorymusic/listMusicAdmin.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport {\r\n  apiUploadFileMp3,\r\n  apiUploadImgMp3,\r\n} from \"../../../../contexts/constants\";\r\nimport { apiUrl, UPDATE_MUSIC } from \"../../../../contexts/constants\";\r\nimport { MusicContext } from \"../../../../contexts/musicContext\";\r\nimport axios from \"axios\";\r\nimport PopupMusic from \"./popupMusic\";\r\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\r\n\r\nexport default function ListMusicAdmin({\r\n  music: { _id, musicName, musicAuthor, musicImg, musicFile },\r\n}) {\r\n  const { music, dispatch, findIDMusic } = useContext(MusicContext);\r\n\r\n  function editMussic(musicId) {\r\n    findIDMusic(musicId);\r\n    const popUpEdit = document.querySelector(\".edit-popup\");\r\n    setTimeout(() => popUpEdit.classList.add(\"active\"), 500);\r\n  }\r\n\r\n  // // close popup\r\n  // function outPopupMusic(musicId) {\r\n  //   const popUpEdit = document.querySelector(\".edit-popup\");\r\n  //   popUpEdit.classList.remove(\"active\");\r\n  // }\r\n\r\n  // // local state\r\n  // const [updateMusic, setupdateMusic] = useState({\r\n  //   musicName: \"\",\r\n  //   musicAuthor: \"\",\r\n  //   musicImg: \"\",\r\n  //   musicFile: \"\",\r\n  //   musicCategory: \"\",\r\n  // });\r\n\r\n  // // get data as user input\r\n  // const onChangeMusicForm = function (event) {\r\n  //   setupdateMusic({ ...updateMusic, [event.target.name]: event.target.value });\r\n  // };\r\n\r\n  // //get img file as user input\r\n  // const onChangeFileImgForm = function (event) {\r\n  //   setupdateMusic({ ...updateMusic, musicImg: event.target.files[0] });\r\n  // };\r\n\r\n  // //get mp3 file as user input\r\n  // const onChangeMp3Form = function (event) {\r\n  //   setupdateMusic({ ...updateMusic, musicFile: event.target.files[0] });\r\n  // };\r\n\r\n  // const onSubmitUpdate = function (e) {\r\n  //   e.preventDefault();\r\n\r\n  //   // initialize formdata to store values in state and assign those values to name in input\r\n  //   const formData = new FormData();\r\n  //   formData.append(\"musicName\", updateMusic.musicName);\r\n  //   formData.append(\"musicAuthor\", updateMusic.musicAuthor);\r\n  //   formData.append(\"musicImg\", updateMusic.musicImg);\r\n  //   formData.append(\"musicFile\", updateMusic.musicFile);\r\n  //   formData.append(\"musicCategory\", updateMusic.musicCategory);\r\n\r\n  //   axios\r\n  //     .put(`${apiUrl}/music/update/`, formData)\r\n  //     .then((response) => {\r\n  //       if (response.data.success) {\r\n  //         dispatch({ type: UPDATE_MUSIC, payload: response.data.music });\r\n  //         return response.data;\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       return error.response\r\n  //         ? error.response\r\n  //         : { success: false, message: \"Server error\" };\r\n  //     });\r\n  // };\r\n\r\n  return (\r\n    <div className=\"like\">\r\n      <img className=\"img\" src={`${apiUploadImgMp3}${musicImg}`} alt=\"\" />\r\n      <h5 className=\"name\">{musicName}</h5>\r\n      <h5 className=\"author\">{musicAuthor}</h5>\r\n      <audio className=\"audio\" src={`${apiUploadFileMp3}${musicFile}`} />\r\n      <button className=\"item-create edit\" onClick={editMussic.bind(this, _id)}>\r\n        Edit\r\n      </button>\r\n      <PopupMusic />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,SACEC,gBAAgB,EAChBC,eAAe,QACV,gCAAgC;AACvC,SAASC,MAAM,EAAEC,YAAY,QAAQ,gCAAgC;AACrE,SAASC,YAAY,QAAQ,mCAAmC;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,MAAM,MAAM,sCAAsC;AAAC;AAE1D,eAAe,SAASC,cAAc,OAEnC;EAAA;EAAA,IAFoC;IACrCC,KAAK,EAAE;MAAEC,GAAG;MAAEC,SAAS;MAAEC,WAAW;MAAEC,QAAQ;MAAEC;IAAU;EAC5D,CAAC;EACC,MAAM;IAAEL,KAAK;IAAEM,QAAQ;IAAEC;EAAY,CAAC,GAAGlB,UAAU,CAACM,YAAY,CAAC;EAEjE,SAASa,UAAU,CAACC,OAAO,EAAE;IAC3BF,WAAW,CAACE,OAAO,CAAC;IACpB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,aAAa,CAAC;IACvDC,UAAU,CAAC,MAAMH,SAAS,CAACI,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC,EAAE,GAAG,CAAC;EAC1D;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAK,SAAS,EAAC,KAAK;MAAC,GAAG,EAAG,GAAEvB,eAAgB,GAAEY,QAAS,EAAE;MAAC,GAAG,EAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACpE;MAAI,SAAS,EAAC,MAAM;MAAA,UAAEF;IAAS;MAAA;MAAA;MAAA;IAAA,QAAM,eACrC;MAAI,SAAS,EAAC,QAAQ;MAAA,UAAEC;IAAW;MAAA;MAAA;MAAA;IAAA,QAAM,eACzC;MAAO,SAAS,EAAC,OAAO;MAAC,GAAG,EAAG,GAAEZ,gBAAiB,GAAEc,SAAU;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eACnE;MAAQ,SAAS,EAAC,kBAAkB;MAAC,OAAO,EAAEG,UAAU,CAACQ,IAAI,CAAC,IAAI,EAAEf,GAAG,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhE,eACT,QAAC,UAAU;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACV;AAEV;AAAC,GA/EuBF,cAAc;AAAA,KAAdA,cAAc;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}