{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\page\\\\home\\\\component\\\\postFavorite.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../../../contexts/authContext\";\nimport { FavoriteContext } from \"../../../contexts/farvoriteContext\";\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\nimport { apiUploadFileMp3, apiUploadImgMp3 } from \"../../../contexts/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostFavorite() {\n  _s();\n\n  // get global data by useContext\n  const {\n    favoriteState: {\n      favorite: {\n        _id\n      },\n      favorites,\n      favoritesLoading\n    },\n    getFavorites,\n    deleteFavorite\n  } = useContext(FavoriteContext);\n  const {\n    authState: {\n      user: {\n        _id: userId\n      }\n    }\n  } = useContext(AuthContext); // start get all favorites\n\n  useEffect(() => getFavorites(), []); // check id for render favorites data\n\n  const checkIdFavorite = favorites.filter(favorite => {\n    return favorite.user._id === userId;\n  });\n\n  const deleteFavoriteClick = function (favoriteId) {\n    deleteFavorite(favoriteId);\n    console.log(favoriteId);\n  }; //check data uploaded for render\n\n\n  if (favoritesLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100vh\",\n        position: \"absolute\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Ripple, {\n        style: {\n          top: \"50%\",\n          left: \"50%\",\n          position: \"relative\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        color: \"#be97e8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \" \", \";\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postfavrorite post-list post-list-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__items\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorites\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"title\",\n            children: \"My favorite playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), checkIdFavorite.map(favorite => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"like\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${apiUploadImgMp3}${favorite.music.musicImg}`,\n              className: \"img\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"name\",\n              children: favorite.music.musicName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"author\",\n              children: favorite.music.musicAuthor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                onClick: deleteFavoriteClick.bind(this, _id),\n                className: \"fa fa-heart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n              className: \"audio\",\n              src: `${apiUploadFileMp3}${favorite.music.musicFile}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(PostFavorite, \"5BL9DqfLb8N7r5DO9a90j8PLa4g=\");\n\n_c = PostFavorite;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostFavorite\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/page/home/component/postFavorite.jsx"],"names":["React","useContext","useEffect","AuthContext","FavoriteContext","Ripple","apiUploadFileMp3","apiUploadImgMp3","PostFavorite","favoriteState","favorite","_id","favorites","favoritesLoading","getFavorites","deleteFavorite","authState","user","userId","checkIdFavorite","filter","deleteFavoriteClick","favoriteId","console","log","width","height","position","top","left","transform","map","music","musicImg","musicName","musicAuthor","bind","musicFile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,eAAT,QAAgC,oCAAhC;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,6BAAlD;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC;AACA,QAAM;AACJC,IAAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAE;AAAEC,QAAAA;AAAF,OADG;AAEbC,MAAAA,SAFa;AAGbC,MAAAA;AAHa,KADX;AAMJC,IAAAA,YANI;AAOJC,IAAAA;AAPI,MAQFd,UAAU,CAACG,eAAD,CARd;AASA,QAAM;AACJY,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AAAEN,QAAAA,GAAG,EAAEO;AAAP;AADG;AADP,MAIFjB,UAAU,CAACE,WAAD,CAJd,CAXqC,CAiBrC;;AACAD,EAAAA,SAAS,CAAC,MAAMY,YAAY,EAAnB,EAAuB,EAAvB,CAAT,CAlBqC,CAoBrC;;AACA,QAAMK,eAAe,GAAGP,SAAS,CAACQ,MAAV,CAAkBV,QAAD,IAAc;AACrD,WAAOA,QAAQ,CAACO,IAAT,CAAcN,GAAd,KAAsBO,MAA7B;AACD,GAFuB,CAAxB;;AAIA,QAAMG,mBAAmB,GAAG,UAAUC,UAAV,EAAsB;AAChDP,IAAAA,cAAc,CAACO,UAAD,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACD,GAHD,CAzBqC,CA8BrC;;;AACA,MAAIT,gBAAJ,EAAsB;AACpB,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,QAAQ,EAAE;AAA5C,OAAZ;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,GAAG,EAAE,KADA;AAELC,UAAAA,IAAI,EAAE,KAFD;AAGLF,UAAAA,QAAQ,EAAE,UAHL;AAILG,UAAAA,SAAS,EAAE;AAJN,SADT;AAOE,QAAA,KAAK,EAAC;AAPR;AAAA;AAAA;AAAA;AAAA,cADF,EASK,GATL,OAUI,GAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfD,MAeO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,qCAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGX,eAAe,CAACY,GAAhB,CAAqBrB,QAAD,iBACnB;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AACE,cAAA,GAAG,EAAG,GAAEH,eAAgB,GAAEG,QAAQ,CAACsB,KAAT,CAAeC,QAAS,EADpD;AAEE,cAAA,SAAS,EAAC,KAFZ;AAGE,cAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAI,cAAA,SAAS,EAAC,MAAd;AAAA,wBAAsBvB,QAAQ,CAACsB,KAAT,CAAeE;AAArC;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAI,cAAA,SAAS,EAAC,QAAd;AAAA,wBAAwBxB,QAAQ,CAACsB,KAAT,CAAeG;AAAvC;AAAA;AAAA;AAAA;AAAA,oBAPF,eAQE;AAAG,cAAA,IAAI,EAAC,GAAR;AAAA,qCACE;AACE,gBAAA,OAAO,EAAEd,mBAAmB,CAACe,IAApB,CAAyB,IAAzB,EAA+BzB,GAA/B,CADX;AAEE,gBAAA,SAAS,EAAC;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBARF,eAcE;AACE,cAAA,SAAS,EAAC,OADZ;AAEE,cAAA,GAAG,EAAG,GAAEL,gBAAiB,GAAEI,QAAQ,CAACsB,KAAT,CAAeK,SAAU;AAFtD;AAAA;AAAA;AAAA;AAAA,oBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA8BD;AACF;;GA9EuB7B,Y;;KAAAA,Y","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../../../contexts/authContext\";\r\nimport { FavoriteContext } from \"../../../contexts/farvoriteContext\";\r\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\r\nimport { apiUploadFileMp3, apiUploadImgMp3 } from \"../../../contexts/constants\";\r\n\r\nexport default function PostFavorite() {\r\n  // get global data by useContext\r\n  const {\r\n    favoriteState: {\r\n      favorite: { _id },\r\n      favorites,\r\n      favoritesLoading,\r\n    },\r\n    getFavorites,\r\n    deleteFavorite,\r\n  } = useContext(FavoriteContext);\r\n  const {\r\n    authState: {\r\n      user: { _id: userId },\r\n    },\r\n  } = useContext(AuthContext);\r\n\r\n  // start get all favorites\r\n  useEffect(() => getFavorites(), []);\r\n\r\n  // check id for render favorites data\r\n  const checkIdFavorite = favorites.filter((favorite) => {\r\n    return favorite.user._id === userId;\r\n  });\r\n\r\n  const deleteFavoriteClick = function (favoriteId) {\r\n    deleteFavorite(favoriteId);\r\n    console.log(favoriteId);\r\n  };\r\n\r\n  //check data uploaded for render\r\n  if (favoritesLoading) {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100vh\", position: \"absolute\" }}>\r\n        <Ripple\r\n          style={{\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: \"relative\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n          color=\"#be97e8\"\r\n        />{\" \"}\r\n        ;{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"postfavrorite post-list post-list-3\">\r\n        <div className=\"post__items\">\r\n          <div className=\"favorites\">\r\n            <h3 className=\"title\">My favorite playlist</h3>\r\n            {checkIdFavorite.map((favorite) => (\r\n              <div className=\"like\">\r\n                <img\r\n                  src={`${apiUploadImgMp3}${favorite.music.musicImg}`}\r\n                  className=\"img\"\r\n                  alt=\"\"\r\n                />\r\n                <h4 className=\"name\">{favorite.music.musicName}</h4>\r\n                <h4 className=\"author\">{favorite.music.musicAuthor}</h4>\r\n                <a href=\"#\">\r\n                  <i\r\n                    onClick={deleteFavoriteClick.bind(this, _id)}\r\n                    className=\"fa fa-heart\"\r\n                  />\r\n                </a>\r\n                <audio\r\n                  className=\"audio\"\r\n                  src={`${apiUploadFileMp3}${favorite.music.musicFile}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}