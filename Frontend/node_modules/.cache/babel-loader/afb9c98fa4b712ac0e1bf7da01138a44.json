{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\cmtContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useReducer } from \"react\";\nimport \"../contexts/constants\";\nimport { commentReducer } from \"../reducers/cmtReducer\";\nimport { postReducer } from \"../reducers/postReducer\";\nimport { apiUrl } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommentContext = /*#__PURE__*/createContext();\n\nconst CommentContextProvider = ({\n  children\n}) => {\n  _s();\n\n  // State\n  const [commentState, dispatch] = useReducer(commentReducer, {\n    comment: null,\n    comments: [],\n    commentsLoading: true\n  }); // Get all posts\n\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/comments/datacmts`);\n\n      if (response.data.success) {\n        dispatch({\n          type: POSTS_LOADED_SUCCESS,\n          payload: response.data.posts\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: POSTS_LOADED_FAIL\n      });\n    }\n  }; // post context data\n\n\n  const postContextData = {\n    postState,\n    getPosts\n  };\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: postContextData,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentContextProvider, \"D9uheR9/QLvcaNKx77Y1/AiTAWI=\");\n\n_c = CommentContextProvider;\nexport default CommentContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentContextProvider\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/cmtContext.js"],"names":["axios","createContext","useReducer","commentReducer","postReducer","apiUrl","CommentContext","CommentContextProvider","children","commentState","dispatch","comment","comments","commentsLoading","getPosts","response","get","data","success","type","POSTS_LOADED_SUCCESS","payload","posts","error","POSTS_LOADED_FAIL","postContextData","postState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,OAAe,uBAAf;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,OAAO,MAAMC,cAAc,gBAAGL,aAAa,EAApC;;AAEP,MAAMM,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/C;AACA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BR,UAAU,CAACC,cAAD,EAAiB;AAC1DQ,IAAAA,OAAO,EAAE,IADiD;AAE1DC,IAAAA,QAAQ,EAAE,EAFgD;AAG1DC,IAAAA,eAAe,EAAE;AAHyC,GAAjB,CAA3C,CAF+C,CAQ/C;;AACA,QAAMC,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,GAAEX,MAAO,oBAApB,CAAvB;;AACA,UAAIU,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBR,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAEC,oBADC;AAEPC,UAAAA,OAAO,EAAEN,QAAQ,CAACE,IAAT,CAAcK;AAFhB,SAAD,CAAR;AAID;AACF,KARD,CAQE,OAAOC,KAAP,EAAc;AACdb,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEK;AAAR,OAAD,CAAR;AACD;AACF,GAZD,CAT+C,CAuB/C;;;AACA,QAAMC,eAAe,GAAG;AACtBC,IAAAA,SADsB;AAEtBZ,IAAAA;AAFsB,GAAxB;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEW,eAA7B;AAAA,eACG,GADH,EAEGjB,QAFH,EAEa,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlCD;;GAAMD,sB;;KAAAA,sB;AAoCN,eAAeA,sBAAf","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useReducer } from \"react\";\r\nimport {} from \"../contexts/constants\";\r\nimport { commentReducer } from \"../reducers/cmtReducer\";\r\nimport { postReducer } from \"../reducers/postReducer\";\r\n\r\nimport { apiUrl } from \"./constants\";\r\n\r\nexport const CommentContext = createContext();\r\n\r\nconst CommentContextProvider = ({ children }) => {\r\n  // State\r\n  const [commentState, dispatch] = useReducer(commentReducer, {\r\n    comment: null,\r\n    comments: [],\r\n    commentsLoading: true,\r\n  });\r\n\r\n  // Get all posts\r\n  const getPosts = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/comments/datacmts`);\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: POSTS_LOADED_SUCCESS,\r\n          payload: response.data.posts,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: POSTS_LOADED_FAIL });\r\n    }\r\n  };\r\n\r\n  // post context data\r\n  const postContextData = {\r\n    postState,\r\n    getPosts,\r\n  };\r\n  return (\r\n    <PostContext.Provider value={postContextData}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </PostContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CommentContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}