{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\page\\\\home\\\\component\\\\postFavorite.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../../../contexts/authContext\";\nimport { FavoriteContext } from \"../../../contexts/farvoriteContext\";\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\nimport FavoriteMusic from \"../../../component/favoriteMusic\";\nimport { apiUploadFileMp3, apiUploadImgMp3 } from \"../../../contexts/constants\";\nimport { MusicContext } from \"../../../contexts/musicContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostFavorite() {\n  _s();\n\n  // get global data by useContext\n  const {\n    favoriteState: {\n      favorites,\n      favorite,\n      favoritessLoading\n    },\n    getFavorites,\n    getIdFavoriteHome\n  } = useContext(FavoriteContext);\n  const {\n    authState: {\n      user: {\n        _id: userId\n      }\n    }\n  } = useContext(AuthContext); // play music\n  // set state for play btn\n\n  const {\n    getIdMusicHome\n  } = useContext(F);\n  const musicError = document.querySelector(\".music__noti\");\n  const musicPlayed = document.querySelector(\".music__audio\"); // set  music state at MusicContext to data music selected\n\n  const getMusicSelected = async music => {\n    getIdMusicHome(music);\n    console.log(music);\n    musicError.style.display = \"none\";\n    musicPlayed.style.display = \"block\";\n  }; // start get all favorites\n\n\n  useEffect(() => getFavorites(), []);\n  console.log(userId);\n  console.log(favorites); // check id for render favorites data\n\n  const checkIdFavorite = favorites.filter(favorite => {\n    return favorite.user._id === userId;\n  }); //check data uploaded for render\n\n  if (favoritessLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100vh\",\n        position: \"absolute\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Ripple, {\n        style: {\n          top: \"50%\",\n          left: \"50%\",\n          position: \"relative\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        color: \"#be97e8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \", \";\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postfavrorite post-list post-list-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__items\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorites\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"title\",\n            children: \"My favorite playlist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), checkIdFavorite.map(favorite => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: getMusicSelected.bind(this, favorite.music_id),\n            className: \"like\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${apiUploadImgMp3}${favorite.music.musicImg}`,\n              className: \"img\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"name\",\n              children: favorite.music.musicName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"author\",\n              children: favorite.music.musicAuthor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-heart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n              className: \"audio\",\n              src: `${apiUploadFileMp3}${favorite.music.musicFile}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(PostFavorite, \"ynsrRGdLSGqCHxVYvcqRS8tZhhc=\");\n\n_c = PostFavorite;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostFavorite\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/page/home/component/postFavorite.jsx"],"names":["React","useContext","useEffect","AuthContext","FavoriteContext","Ripple","FavoriteMusic","apiUploadFileMp3","apiUploadImgMp3","MusicContext","PostFavorite","favoriteState","favorites","favorite","favoritessLoading","getFavorites","getIdFavoriteHome","authState","user","_id","userId","getIdMusicHome","F","musicError","document","querySelector","musicPlayed","getMusicSelected","music","console","log","style","display","checkIdFavorite","filter","width","height","position","top","left","transform","map","bind","music_id","musicImg","musicName","musicAuthor","musicFile"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { AuthContext } from \"../../../contexts/authContext\";\r\nimport { FavoriteContext } from \"../../../contexts/farvoriteContext\";\r\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\r\nimport FavoriteMusic from \"../../../component/favoriteMusic\";\r\nimport { apiUploadFileMp3, apiUploadImgMp3 } from \"../../../contexts/constants\";\r\nimport { MusicContext } from \"../../../contexts/musicContext\";\r\n\r\nexport default function PostFavorite() {\r\n  // get global data by useContext\r\n  const {\r\n    favoriteState: { favorites, favorite, favoritessLoading },\r\n    getFavorites,\r\n    getIdFavoriteHome,\r\n  } = useContext(FavoriteContext);\r\n  const {\r\n    authState: {\r\n      user: { _id: userId },\r\n    },\r\n  } = useContext(AuthContext);\r\n\r\n  // play music\r\n  // set state for play btn\r\n  const { getIdMusicHome } = useContext(F);\r\n  const musicError = document.querySelector(\".music__noti\");\r\n  const musicPlayed = document.querySelector(\".music__audio\");\r\n\r\n  // set  music state at MusicContext to data music selected\r\n  const getMusicSelected = async (music) => {\r\n    getIdMusicHome(music);\r\n    console.log(music);\r\n    musicError.style.display = \"none\";\r\n    musicPlayed.style.display = \"block\";\r\n  };\r\n\r\n  // start get all favorites\r\n  useEffect(() => getFavorites(), []);\r\n  console.log(userId);\r\n  console.log(favorites);\r\n\r\n  // check id for render favorites data\r\n  const checkIdFavorite = favorites.filter((favorite) => {\r\n    return favorite.user._id === userId;\r\n  });\r\n\r\n  //check data uploaded for render\r\n  if (favoritessLoading) {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100vh\", position: \"absolute\" }}>\r\n        <Ripple\r\n          style={{\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: \"relative\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n          color=\"#be97e8\"\r\n        />{\" \"}\r\n        ;{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"postfavrorite post-list post-list-3\">\r\n        <div className=\"post__items\">\r\n          <div className=\"favorites\">\r\n            <h3 className=\"title\">My favorite playlist</h3>\r\n            {checkIdFavorite.map((favorite) => (\r\n              <div\r\n                onClick={getMusicSelected.bind(this, favorite.music_id)}\r\n                className=\"like\"\r\n              >\r\n                <img\r\n                  src={`${apiUploadImgMp3}${favorite.music.musicImg}`}\r\n                  className=\"img\"\r\n                  alt=\"\"\r\n                />\r\n                <h4 className=\"name\">{favorite.music.musicName}</h4>\r\n                <h4 className=\"author\">{favorite.music.musicAuthor}</h4>\r\n                <a href=\"#\">\r\n                  <i className=\"fa fa-heart\" />\r\n                </a>\r\n                <audio\r\n                  className=\"audio\"\r\n                  src={`${apiUploadFileMp3}${favorite.music.musicFile}`}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}