{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\page\\\\register\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  // Context\n  const {\n    loadUser\n  } = useContext(AuthContext); // local state\n\n  const [register, setRegister] = useState({\n    userEmail: \"\",\n    userPassword: \"\",\n    confirmPassword: \"\",\n    userName: \"\",\n    userAvatar: \"\"\n  }); //Router\n\n  const history = useHistory(); // get data as user input\n\n  const onChangeRegisterForm = function (event) {\n    setRegister({ ...register,\n      [event.target.name]: event.target.value\n    });\n  }; //get file as user input\n\n\n  const onChangeFileUserForm = function (event) {\n    if (event.target.files && event.target.files[0]) {\n      let reader = new FileReader();\n      let file = event.target.files[0];\n\n      reader.onloadend = () => {\n        setRegister({ ...register,\n          file: file\n        });\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }; // when the data changes, add new data for register state\n\n\n  const {\n    userEmail,\n    userPassword,\n    confirmPassword,\n    userName\n  } = register;\n\n  const userRegister = async function (userForm) {\n    userForm.preventDefault();\n    const formData = new FormData();\n    formData.append(\"userAvatar\", register.file); // for (var pair of formData.entries()) {\n    //   console.log(pair[1]);\n    // }\n\n    const config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\"\n      }\n    };\n\n    try {\n      const response = await axios.post(`${apiUrl}/auth/register`, userForm, config);\n      if (response.data.success) localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken);\n\n      if (userPassword != confirmPassword) {\n        alert(\"Passwords do not match\");\n      }\n\n      try {\n        if (!userForm.success) {\n          console.log(userForm.message);\n        }\n\n        history.push(\"/login\");\n      } catch (e) {\n        console.log(e);\n      }\n\n      await loadUser(); // return response.data;\n    } catch (error) {\n      if (error.response) return error.response;else return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"l-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: userRegister,\n        enctype: \"multipart/form-data\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/logo1.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form__title\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userEmail\",\n            value: userEmail,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userPassword\",\n            value: userPassword,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"confirmPassword\",\n            value: confirmPassword,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userName\",\n            value: userName,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userAvatar\",\n            required: true,\n            onChange: onChangeFileUserForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Your avartar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"form__button\",\n          defaultValue: \"Sign In\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"K8X3Wa0HdZ3i8vX603rPs8D+T8A=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/page/register/index.jsx"],"names":["axios","React","useContext","useState","useHistory","AuthContext","apiUrl","LOCAL_STORAGE_TOKEN_NAME","Register","loadUser","register","setRegister","userEmail","userPassword","confirmPassword","userName","userAvatar","history","onChangeRegisterForm","event","target","name","value","onChangeFileUserForm","files","reader","FileReader","file","onloadend","readAsDataURL","userRegister","userForm","preventDefault","formData","FormData","append","config","headers","response","post","data","success","localStorage","setItem","accessToken","alert","console","log","message","push","e","error"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\r\n\r\nexport default function Register() {\r\n  // Context\r\n  const { loadUser } = useContext(AuthContext);\r\n\r\n  // local state\r\n  const [register, setRegister] = useState({\r\n    userEmail: \"\",\r\n    userPassword: \"\",\r\n    confirmPassword: \"\",\r\n    userName: \"\",\r\n    userAvatar: \"\",\r\n  });\r\n\r\n  //Router\r\n  const history = useHistory();\r\n\r\n  // get data as user input\r\n  const onChangeRegisterForm = function (event) {\r\n    setRegister({ ...register, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  //get file as user input\r\n  const onChangeFileUserForm = function (event) {\r\n    if (event.target.files && event.target.files[0]) {\r\n      let reader = new FileReader();\r\n      let file = event.target.files[0];\r\n      reader.onloadend = () => {\r\n        setRegister({\r\n          ...register,\r\n          file: file,\r\n        });\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  // when the data changes, add new data for register state\r\n\r\n  const { userEmail, userPassword, confirmPassword, userName } = register;\r\n\r\n  const userRegister = async function (userForm) {\r\n    userForm.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"userAvatar\", register.file);\r\n    // for (var pair of formData.entries()) {\r\n    //   console.log(pair[1]);\r\n    // }\r\n    const config = {\r\n      headers: {\r\n        \"content-type\": \"multipart/form-data\",\r\n      },\r\n    };\r\n    try {\r\n      const response = await axios.post(\r\n        `${apiUrl}/auth/register`,\r\n        userForm,\r\n        config\r\n      );\r\n      if (response.data.success)\r\n        localStorage.setItem(\r\n          LOCAL_STORAGE_TOKEN_NAME,\r\n          response.data.accessToken\r\n        );\r\n\r\n      if (userPassword != confirmPassword) {\r\n        alert(\"Passwords do not match\");\r\n      }\r\n      try {\r\n        if (!userForm.success) {\r\n          console.log(userForm.message);\r\n        }\r\n        history.push(\"/login\");\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n\r\n      await loadUser();\r\n\r\n      // return response.data;\r\n    } catch (error) {\r\n      if (error.response) return error.response;\r\n      else return { success: false, message: error.message };\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"l-form\">\r\n        <form\r\n          onSubmit={userRegister}\r\n          enctype=\"multipart/form-data\"\r\n          className=\"form\"\r\n        >\r\n          <img src=\"/img/logo1.svg\" alt=\"\" />\r\n          <h2 className=\"form__title\">Register</h2>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userEmail\"\r\n              value={userEmail}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Email\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userPassword\"\r\n              value={userPassword}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Password\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"confirmPassword\"\r\n              value={confirmPassword}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Confirm Password\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userName\"\r\n              value={userName}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Your name\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userAvatar\"\r\n              required\r\n              onChange={onChangeFileUserForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Your avartar\r\n            </label>\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            className=\"form__button\"\r\n            defaultValue=\"Sign In\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}