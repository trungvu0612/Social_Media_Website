{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\component\\\\checkRouting\\\\checkRedirect.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\nimport jwt_decode from \"jwt-decode\";\nimport { LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\nimport Header from \"../header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CheckRedirect = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    authState: {\n      authLoading,\n      isAuthenticated\n    }\n  } = useContext(AuthContext);\n  console.log(decoded.userId);\n\n  if (authLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100vh\",\n        position: \"absolute\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Ripple, {\n        style: {\n          top: \"50%\",\n          left: \"50%\",\n          position: \"relative\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        color: \"#be97e8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), \" \", \";\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: // (props) => {\n    //   if (isAuthenticated) {\n    //     <>\n    //       <Component {...rest} {...props} />{\" \"}\n    //     </>;\n    //   } else {\n    //     <Redirect to=\"/login\" />;\n    //   }\n    // }\n    props => isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Component, { ...rest,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckRedirect, \"SlXQvAVOyDl/xC3FAPRQMRGAI6g=\");\n\n_c = CheckRedirect;\nexport default CheckRedirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckRedirect\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/component/checkRouting/checkRedirect.js"],"names":["useContext","Redirect","Route","AuthContext","Ripple","jwt_decode","LOCAL_STORAGE_TOKEN_NAME","Header","CheckRedirect","component","Component","rest","authState","authLoading","isAuthenticated","console","log","decoded","userId","width","height","position","top","left","transform","props"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,wBAAT,QAAyC,0BAAzC;AACA,OAAOC,MAAP,MAAmB,WAAnB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC3D,QAAM;AACJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf;AADP,MAEFd,UAAU,CAACG,WAAD,CAFd;AAIAY,EAAAA,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,MAApB;;AACA,MAAIL,WAAJ,EAAiB;AACf,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,QAAQ,EAAE;AAA5C,OAAZ;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,GAAG,EAAE,KADA;AAELC,UAAAA,IAAI,EAAE,KAFD;AAGLF,UAAAA,QAAQ,EAAE,UAHL;AAILG,UAAAA,SAAS,EAAE;AAJN,SADT;AAOE,QAAA,KAAK,EAAC;AAPR;AAAA;AAAA;AAAA;AAAA,cADF,EASK,GATL,OAUI,GAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AAED,sBACE,QAAC,KAAD,OACMb,IADN;AAEE,IAAA,MAAM,EACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAECc,IAAAA,KAAD,IACEX,eAAe,gBACb;AAAA,8BACE,QAAC,SAAD,OAAeH,IAAf;AAAA,WAAyBc;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,EACqC,GADrC;AAAA,oBADa,gBAKb,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAnBR;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAhDD;;GAAMjB,a;;KAAAA,a;AAiDN,eAAeA,aAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\r\nimport Header from \"../header\";\r\n\r\nconst CheckRedirect = ({ component: Component, ...rest }) => {\r\n  const {\r\n    authState: { authLoading, isAuthenticated },\r\n  } = useContext(AuthContext);\r\n\r\n  console.log(decoded.userId);\r\n  if (authLoading) {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100vh\", position: \"absolute\" }}>\r\n        <Ripple\r\n          style={{\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: \"relative\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n          color=\"#be97e8\"\r\n        />{\" \"}\r\n        ;{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={\r\n        // (props) => {\r\n        //   if (isAuthenticated) {\r\n        //     <>\r\n        //       <Component {...rest} {...props} />{\" \"}\r\n        //     </>;\r\n        //   } else {\r\n        //     <Redirect to=\"/login\" />;\r\n        //   }\r\n        // }\r\n\r\n        (props) =>\r\n          isAuthenticated ? (\r\n            <>\r\n              <Component {...rest} {...props} />{\" \"}\r\n            </>\r\n          ) : (\r\n            <Redirect to=\"/login\" />\r\n          )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default CheckRedirect;\r\n"]},"metadata":{},"sourceType":"module"}