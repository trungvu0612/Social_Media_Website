{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\musicContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useReducer } from \"react\";\nimport { musicReducer } from \"../reducers/musicReducer\";\nimport { apiUrl, MUSICS_LOADED_FAIL, MUSICS_LOADED_SUCCESS } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MusicContext = /*#__PURE__*/createContext();\n\nconst MusicContextProvider = ({\n  children\n}) => {\n  _s();\n\n  // State\n  const [musicState, dispatch] = useReducer(musicReducer, {\n    music: null,\n    musics: [],\n    musicsLoading: true\n  }); // Get all posts\n\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/posts`);\n\n      if (response.data.success) {\n        dispatch({\n          type: MUSICS_LOADED_SUCCESS,\n          payload: response.data.posts\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: MUSICS_LOADED_FAIL\n      });\n    }\n  }; // music context data\n\n\n  const musicContextData = {\n    musicState\n  };\n  return /*#__PURE__*/_jsxDEV(MusicContext.Provider, {\n    value: musicContextData,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MusicContextProvider, \"CdIGB0kqu2ctEZEomUQg5vOuqyo=\");\n\n_c = MusicContextProvider;\nexport default MusicContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicContextProvider\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/musicContext.js"],"names":["axios","createContext","useReducer","musicReducer","apiUrl","MUSICS_LOADED_FAIL","MUSICS_LOADED_SUCCESS","MusicContext","MusicContextProvider","children","musicState","dispatch","music","musics","musicsLoading","getPosts","response","get","data","success","type","payload","posts","error","musicContextData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SAASC,MAAT,EAAiBC,kBAAjB,EAAqCC,qBAArC,QAAkE,aAAlE;;AAEA,OAAO,MAAMC,YAAY,gBAAGN,aAAa,EAAlC;;AAEP,MAAMO,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C;AACA,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBT,UAAU,CAACC,YAAD,EAAe;AACtDS,IAAAA,KAAK,EAAE,IAD+C;AAEtDC,IAAAA,MAAM,EAAE,EAF8C;AAGtDC,IAAAA,aAAa,EAAE;AAHuC,GAAf,CAAzC,CAF6C,CAQ7C;;AACA,QAAMC,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAW,GAAEb,MAAO,QAApB,CAAvB;;AACA,UAAIY,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBR,QAAAA,QAAQ,CAAC;AAAES,UAAAA,IAAI,EAAEd,qBAAR;AAA+Be,UAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcI;AAAtD,SAAD,CAAR;AACD;AACF,KALD,CAKE,OAAOC,KAAP,EAAc;AACdZ,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEf;AAAR,OAAD,CAAR;AACD;AACF,GATD,CAT6C,CAoB7C;;;AACA,QAAMmB,gBAAgB,GAAG;AACvBd,IAAAA;AADuB,GAAzB;AAGA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEc,gBAA9B;AAAA,eACG,GADH,EAEGf,QAFH,EAEa,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA9BD;;GAAMD,oB;;KAAAA,oB;AAgCN,eAAeA,oBAAf","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useReducer } from \"react\";\r\nimport { musicReducer } from \"../reducers/musicReducer\";\r\nimport { apiUrl, MUSICS_LOADED_FAIL, MUSICS_LOADED_SUCCESS } from \"./constants\";\r\n\r\nexport const MusicContext = createContext();\r\n\r\nconst MusicContextProvider = ({ children }) => {\r\n  // State\r\n  const [musicState, dispatch] = useReducer(musicReducer, {\r\n    music: null,\r\n    musics: [],\r\n    musicsLoading: true,\r\n  });\r\n\r\n  // Get all posts\r\n  const getPosts = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/posts`);\r\n      if (response.data.success) {\r\n        dispatch({ type: MUSICS_LOADED_SUCCESS, payload: response.data.posts });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: MUSICS_LOADED_FAIL });\r\n    }\r\n  };\r\n\r\n  // music context data\r\n  const musicContextData = {\r\n    musicState,\r\n  };\r\n  return (\r\n    <MusicContext.Provider value={musicContextData}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </MusicContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MusicContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}