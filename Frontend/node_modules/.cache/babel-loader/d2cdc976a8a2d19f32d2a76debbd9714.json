{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\component\\\\checkRouting\\\\protectAdmin.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\nimport jwt_decode from \"jwt-decode\";\nimport { LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProtectAdmin = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    authState: {\n      authLoading,\n      isAuthenticated\n    }\n  } = useContext(AuthContext);\n\n  if (authLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100vh\",\n        position: \"absolute\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Ripple, {\n        style: {\n          top: \"50%\",\n          left: \"50%\",\n          position: \"relative\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        color: \"#be97e8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), \" \", \" \", \"; \", \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 18\n    }, this);\n  }\n\n  if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\n    const decoded = jwt_decode(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n\n    if (decoded.userId === \"615aba567b19409446d0128e\") {\n      return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Component, { ...rest,\n            ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), \" \", \" \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 22\n      }, this);\n    }\n\n    console.log(decoded.userId);\n  } else {\n    /*#__PURE__*/\n    _jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ProtectAdmin, \"/dfDhYt1YbJBXPAAQEkimKYPJsA=\");\n\n_c = ProtectAdmin;\nexport default ProtectAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectAdmin\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/component/checkRouting/protectAdmin.js"],"names":["useContext","Redirect","Route","AuthContext","Ripple","jwt_decode","LOCAL_STORAGE_TOKEN_NAME","ProtectAdmin","component","Component","rest","authState","authLoading","isAuthenticated","width","height","position","top","left","transform","localStorage","decoded","userId","props","console","log"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,wBAAT,QAAyC,0BAAzC;;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AACxD,QAAM;AACFC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf;AADT,MAEFb,UAAU,CAACG,WAAD,CAFd;;AAIA,MAAIS,WAAJ,EAAiB;AACb,wBAAS;AACD,MAAA,KAAK,EACL;AAAEE,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,QAAQ,EAAE;AAA5C,OAFC;AAAA,8BAGL,QACA,MADA;AACO,QAAA,KAAK,EACR;AACIC,UAAAA,GAAG,EAAE,KADT;AAEIC,UAAAA,IAAI,EAAE,KAFV;AAGIF,UAAAA,QAAQ,EAAE,UAHd;AAIIG,UAAAA,SAAS,EAAE;AAJf,SAFJ;AASA,QAAA,KAAK,EAAG;AATR;AAAA;AAAA;AAAA;AAAA,cAHK,OAaD,GAbC,QAaQ,GAbR;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AAgBH;;AAED,MAAIC,YAAY,CAACd,wBAAD,CAAhB,EAA4C;AACxC,UAAMe,OAAO,GAAGhB,UAAU,CAACe,YAAY,CAACd,wBAAD,CAAb,CAA1B;;AACA,QAAIe,OAAO,CAACC,MAAR,KAAmB,0BAAvB,EAAmD;AAC/C,0BAAS,QACL,KADK,OACKZ,IADL;AAEL,QAAA,MAAM,EACDa,KAAD,IACAV,eAAe,gBAAK;AAAA,kCAEhB,QACA,SADA,OACcH,IADd;AAAA,eACyBa;AADzB;AAAA;AAAA;AAAA;AAAA,kBAFgB,EAIb,GAJa;AAAA,wBAAL,gBAMT,QACF,QADE;AACO,UAAA,EAAE,EAAG;AADZ;AAAA;AAAA;AAAA;AAAA;AAVL;AAAA;AAAA;AAAA;AAAA,cAAT;AAgBH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACC,MAApB;AACH,GArBD,MAqBO;AAAE;AAAA,YACL,QADK;AACI,MAAA,EAAE,EAAG;AADT;AAAA;AAAA;AAAA;AAAA;AAER;;AAED,sBAAO,QAAC,QAAD;AAAU,IAAA,EAAE,EAAG;AAAf;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAlDD;;GAAMf,Y;;KAAAA,Y;AAoDN,eAAeA,YAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\r\n\r\nconst ProtectAdmin = ({ component: Component, ...rest }) => {\r\n    const {\r\n        authState: { authLoading, isAuthenticated },\r\n    } = useContext(AuthContext);\r\n\r\n    if (authLoading) {\r\n        return ( <\r\n            div style = {\r\n                { width: \"100%\", height: \"100vh\", position: \"absolute\" } } >\r\n            <\r\n            Ripple style = {\r\n                {\r\n                    top: \"50%\",\r\n                    left: \"50%\",\r\n                    position: \"relative\",\r\n                    transform: \"translate(-50%, -50%)\",\r\n                }\r\n            }\r\n            color = \"#be97e8\" /\r\n            > { \" \" }; { \" \" } <\r\n            /div>\r\n        );\r\n    }\r\n\r\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\r\n        const decoded = jwt_decode(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\r\n        if (decoded.userId === \"615aba567b19409446d0128e\") {\r\n            return ( <\r\n                Route {...rest }\r\n                render = {\r\n                    (props) =>\r\n                    isAuthenticated ? ( <\r\n                        >\r\n                        <\r\n                        Component {...rest } {...props }\r\n                        />{\" \"} <\r\n                        />\r\n                    ) : ( <\r\n                        Redirect to = \"/login\" / >\r\n                    )\r\n                }\r\n                />\r\n            );\r\n        }\r\n        console.log(decoded.userId);\r\n    } else { <\r\n        Redirect to = \"/login\" / > ;\r\n    }\r\n\r\n    return <Redirect to = \"/login\" / > ;\r\n};\r\n\r\nexport default ProtectAdmin;"]},"metadata":{},"sourceType":"module"}