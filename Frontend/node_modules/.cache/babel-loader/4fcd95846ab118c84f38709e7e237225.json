{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\page\\\\home\\\\component\\\\popupCreate.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { AuthContext } from \"../../../contexts/authContext\";\nimport { ADD_POST, apiPost, apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"../../../contexts/constants\";\nimport { MusicContext } from \"../../../contexts/musicContext\";\nimport { PostContext } from \"../../../contexts/postContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PopupCreate() {\n  _s();\n\n  // close popup\n  function outPopupMusic() {\n    const popUpEdit = document.querySelector(\".create-popup\");\n    popUpEdit.classList.remove(\"active\");\n  } // change state context post and get data\n\n\n  const {\n    dispatch\n  } = useContext(PostContext);\n  const {\n    authState: {\n      user: {\n        _id: userId\n      }\n    }\n  } = useContext(AuthContext);\n  const {\n    musicState: {\n      music: {\n        _id: musicId\n      }\n    }\n  } = useContext(MusicContext); // save the musicId value in a new variable\n  // local state\n\n  const [inputPost, setinputPost] = useState({\n    user: userId,\n    postContent: \"\",\n    music: \"\"\n  });\n  const getMusicId = musicId; // get data as user input\n\n  const onChangePost = event => {\n    setinputPost({ ...inputPost,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const onChangeMusic = event => {\n    setinputPost({ ...inputPost,\n      music: event.target.value\n    });\n  };\n\n  const createPost = e => {\n    e.preventDefault();\n    console.log(inputPost.music); // initialize formdata to store values in state and assign those values to name in input\n\n    const formData = new FormData();\n    formData.append(\"user\", inputPost.user);\n    formData.append(\"postContent\", inputPost.postContent);\n    formData.append(\"music\", inputPost.music);\n    console.log(formData);\n    axios.post(`${apiUrl}/posts`, formData).then(response => {\n      console.log(\"t\");\n      console.log(response.data);\n\n      if (response.data.success) {\n        dispatch({\n          type: ADD_POST,\n          payload: response.data.post\n        });\n        return response.data;\n      }\n\n      if (!response.success) {\n        alert(response.data.message);\n      }\n    }).catch(error => {\n      if (error.response) return error.response;else return {\n        success: false,\n        message: error.message\n      };\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__items\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"outbtn\",\n        onClick: outPopupMusic,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"create your new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: createPost,\n        enctype: \"multipart/form-data\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"brise-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"postContent\",\n            id: \"\",\n            cols: \"30\",\n            rows: \"10\",\n            value: inputPost.postContent,\n            onChange: onChangePost,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: getMusicId,\n            name: \"music\",\n            onChange: e => {\n              onChangeMusic(e);\n            },\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"How do you feel about the song or how are you feeling right now?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"submit__btn\",\n            value: \"Create\",\n            defaultValue: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopupCreate, \"3E8s5lTcCRFxZcnEaf+A6GD6MMY=\");\n\n_c = PopupCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopupCreate\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/page/home/component/popupCreate.jsx"],"names":["axios","React","useContext","useState","AuthContext","ADD_POST","apiPost","apiUrl","LOCAL_STORAGE_TOKEN_NAME","MusicContext","PostContext","PopupCreate","outPopupMusic","popUpEdit","document","querySelector","classList","remove","dispatch","authState","user","_id","userId","musicState","music","musicId","inputPost","setinputPost","postContent","getMusicId","onChangePost","event","target","name","value","onChangeMusic","createPost","e","preventDefault","console","log","formData","FormData","append","post","then","response","data","success","type","payload","alert","message","catch","error","display"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { AuthContext } from \"../../../contexts/authContext\";\r\nimport {\r\n  ADD_POST,\r\n  apiPost,\r\n  apiUrl,\r\n  LOCAL_STORAGE_TOKEN_NAME,\r\n} from \"../../../contexts/constants\";\r\nimport { MusicContext } from \"../../../contexts/musicContext\";\r\nimport { PostContext } from \"../../../contexts/postContext\";\r\n\r\nexport default function PopupCreate() {\r\n  // close popup\r\n  function outPopupMusic() {\r\n    const popUpEdit = document.querySelector(\".create-popup\");\r\n    popUpEdit.classList.remove(\"active\");\r\n  }\r\n  // change state context post and get data\r\n  const { dispatch } = useContext(PostContext);\r\n  const {\r\n    authState: {\r\n      user: { _id: userId },\r\n    },\r\n  } = useContext(AuthContext);\r\n  const {\r\n    musicState: {\r\n      music: { _id: musicId },\r\n    },\r\n  } = useContext(MusicContext);\r\n  // save the musicId value in a new variable\r\n\r\n  // local state\r\n  const [inputPost, setinputPost] = useState({\r\n    user: userId,\r\n    postContent: \"\",\r\n    music: \"\",\r\n  });\r\n\r\n  const getMusicId = musicId;\r\n\r\n  // get data as user input\r\n  const onChangePost = (event) => {\r\n    setinputPost({ ...inputPost, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const onChangeMusic = (event) => {\r\n    setinputPost({ ...inputPost, music: event.target.value });\r\n  };\r\n\r\n  const createPost = (e) => {\r\n    e.preventDefault();\r\n    console.log(inputPost.music);\r\n    // initialize formdata to store values in state and assign those values to name in input\r\n    const formData = new FormData();\r\n    formData.append(\"user\", inputPost.user);\r\n    formData.append(\"postContent\", inputPost.postContent);\r\n    formData.append(\"music\", inputPost.music);\r\n    console.log(formData);\r\n    axios\r\n      .post(`${apiUrl}/posts`, formData)\r\n      .then((response) => {\r\n        console.log(\"t\");\r\n        console.log(response.data);\r\n        if (response.data.success) {\r\n          dispatch({ type: ADD_POST, payload: response.data.post });\r\n          return response.data;\r\n        }\r\n        if (!response.success) {\r\n          alert(response.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) return error.response;\r\n        else return { success: false, message: error.message };\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"create-popup\">\r\n      <div className=\"post__items\">\r\n        <div id=\"outbtn\" onClick={outPopupMusic}>\r\n          X\r\n        </div>\r\n        <h3 className=\"title\">create your new post</h3>\r\n        <form onSubmit={createPost} enctype=\"multipart/form-data\">\r\n          <div className=\"brise-text\">\r\n            <textarea\r\n              name=\"postContent\"\r\n              id=\"\"\r\n              cols=\"30\"\r\n              rows=\"10\"\r\n              value={inputPost.postContent}\r\n              onChange={onChangePost}\r\n              required\r\n            ></textarea>\r\n            <input\r\n              type=\"text\"\r\n              value={getMusicId}\r\n              name=\"music\"\r\n              onChange={(e) => {\r\n                onChangeMusic(e);\r\n              }}\r\n              style={{ display: \"none\" }}\r\n            />\r\n            <label>\r\n              How do you feel about the song or how are you feeling right now?\r\n            </label>\r\n          </div>\r\n          <div className=\"submit\">\r\n            <input\r\n              type=\"submit\"\r\n              className=\"submit__btn\"\r\n              value=\"Create\"\r\n              defaultValue=\"Upload\"\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}