{"ast":null,"code":"import { ADD_POST, DELETE_POST, POSTS_LOADED_FAIL, POSTS_LOADED_SUCCESS } from \"../contexts/constants\";\nexport const postReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case ADD_POST:\n      return { ...state,\n        posts: [...state.posts, payload]\n      };\n\n    case POSTS_LOADED_SUCCESS:\n      return { ...state,\n        posts: payload,\n        postsLoading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload)\n      };\n\n    case POSTS_LOADED_FAIL:\n      return { ...state,\n        posts: [],\n        postsLoading: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/reducers/postReducer.js"],"names":["ADD_POST","DELETE_POST","POSTS_LOADED_FAIL","POSTS_LOADED_SUCCESS","postReducer","state","action","type","payload","posts","postsLoading","filter","post","_id"],"mappings":"AAAA,SACIA,QADJ,EAEIC,WAFJ,EAGIC,iBAHJ,EAIIC,oBAJJ,QAKO,uBALP;AAOA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AACA,UAAQC,IAAR;AACI,SAAKP,QAAL;AACI,aAAO,EACH,GAAGK,KADA;AAEHI,QAAAA,KAAK,EAAE,CAAC,GAAGJ,KAAK,CAACI,KAAV,EAAiBD,OAAjB;AAFJ,OAAP;;AAIJ,SAAKL,oBAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHI,QAAAA,KAAK,EAAED,OAFJ;AAGHE,QAAAA,YAAY,EAAE;AAHX,OAAP;;AAMJ,SAAKT,WAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHI,QAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,CAAYE,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,OAA1C;AAFJ,OAAP;;AAKJ,SAAKN,iBAAL;AACI,aAAO,EACH,GAAGG,KADA;AAEHI,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,YAAY,EAAE;AAHX,OAAP;;AAMJ;AACI,aAAOL,KAAP;AA3BR;AA6BH,CA/BM","sourcesContent":["import {\r\n    ADD_POST,\r\n    DELETE_POST,\r\n    POSTS_LOADED_FAIL,\r\n    POSTS_LOADED_SUCCESS,\r\n} from \"../contexts/constants\";\r\n\r\nexport const postReducer = (state, action) => {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, payload],\r\n            };\r\n        case POSTS_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                posts: payload,\r\n                postsLoading: false,\r\n            };\r\n\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter((post) => post._id !== payload),\r\n            };\r\n\r\n        case POSTS_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                posts: [],\r\n                postsLoading: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}