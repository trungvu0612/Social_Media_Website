{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\page\\\\register\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  // Context\n  const {\n    loadUser\n  } = useContext(AuthContext); // local state\n\n  const [register, setRegister] = useState({\n    userEmail: \"\",\n    userPassword: \"\",\n    confirmPassword: \"\",\n    userName: \"\",\n    userAvatar: \"\"\n  }); //Router\n\n  const history = useHistory(); // get data as user input\n\n  const onChangeRegisterForm = function (event) {\n    setRegister({ ...register,\n      [event.target.name]: event.target.value\n    });\n  }; //get file as user input\n\n\n  const onChangeFileUserForm = function (event) {\n    setRegister({ ...register,\n      userAvatar: event.target.files[0]\n    });\n    console.log(event.target.files[0]); // if (event.target.files && event.target.files[0]) {\n    //   let reader = new FileReader();\n    //   let file = event.target.files[0];\n    //   reader.onloadend = () => {\n    //     setRegister({\n    //       ...register,\n    //       userAvatar: file,\n    //     });\n    //   };\n    //   reader.readAsDataURL(file);\n  }; // when the data changes, add new data for register state\n  // const { userEmail, userPassword, confirmPassword, userName } = register;\n  // const registerData = userRegister(register);\n  // console.log(registerData);\n\n\n  console.log(register);\n\n  const userRegister = e => {\n    e.preventDefault();\n    console.log(register);\n    const formData = new FormData();\n    formData.append(\"userEmail\", register.userEmail);\n    formData.append(\"userPassword\", register.userPassword);\n    formData.append(\"confirmPassword\", register.confirmPassword);\n    formData.append(\"userName\", register.userName);\n    formData.append(\"userAvatar\", register.userAvatar);\n    axios.post(`${apiUrl}/auth/register`, formData).then(response => {\n      console.log(response.data);\n\n      if (response.data.success) {\n        localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken);\n        history.push(\"/login\");\n        loadUser();\n        return response;\n      }\n\n      if (!response.success) {\n        alert(response.data.message);\n      }\n    }).catch(error => {\n      if (error.response) return error.response;else return {\n        success: false,\n        message: error.message\n      };\n    }); // const registerUser = async (formData) => {\n    //   try {\n    //     const response = await axios.post(`${apiUrl}/auth/register`, formData);\n    //     console.log(register);\n    //     if (response.data.success)\n    //       localStorage.setItem(\n    //         LOCAL_STORAGE_TOKEN_NAME,\n    //         response.data.accessToken\n    //       );\n    //     await loadUser();\n    //     return response.data;\n    //   } catch (error) {\n    //     if (error.response.data) return error.response.data;\n    //     else return { success: false, message: error.message };\n    //   }\n    // };\n    // if (userPassword != confirmPassword) {\n    //   alert(\"Passwords do not match\");\n    // }\n    // try {\n    //   const registerData = await registerUser(register);\n    //   if (!registerData.success) {\n    //     alert(\"Registration failed\");\n    //     console.log(registerData.message);\n    //   }\n    //   history.push(\"/login\");\n    // } catch (e) {\n    //   console.log(e);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"l-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: userRegister,\n        enctype: \"multipart/form-data\",\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/logo1.svg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"form__title\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userEmail\",\n            value: register.userEmail,\n            required: true,\n            onChange: event => {\n              onChangeRegisterForm(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userPassword\",\n            value: register.userPassword,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"confirmPassword\",\n            value: register.confirmPassword,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form__input\",\n            placeholder: \" \",\n            name: \"userName\",\n            value: register.userName,\n            required: true,\n            onChange: onChangeRegisterForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Your name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form__div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form__input\",\n            onChange: onChangeFileUserForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: true,\n            className: \"form__label\",\n            children: \"Your avartar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"form__button\",\n          defaultValue: \"Sign In\",\n          value: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"K8X3Wa0HdZ3i8vX603rPs8D+T8A=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/page/register/index.jsx"],"names":["axios","React","useContext","useState","useHistory","AuthContext","apiUrl","LOCAL_STORAGE_TOKEN_NAME","Register","loadUser","register","setRegister","userEmail","userPassword","confirmPassword","userName","userAvatar","history","onChangeRegisterForm","event","target","name","value","onChangeFileUserForm","files","console","log","userRegister","e","preventDefault","formData","FormData","append","post","then","response","data","success","localStorage","setItem","accessToken","push","alert","message","catch","error"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME } from \"../../contexts/constants\";\r\n\r\nexport default function Register() {\r\n  // Context\r\n  const { loadUser } = useContext(AuthContext);\r\n\r\n  // local state\r\n  const [register, setRegister] = useState({\r\n    userEmail: \"\",\r\n    userPassword: \"\",\r\n    confirmPassword: \"\",\r\n    userName: \"\",\r\n    userAvatar: \"\",\r\n  });\r\n\r\n  //Router\r\n  const history = useHistory();\r\n\r\n  // get data as user input\r\n  const onChangeRegisterForm = function (event) {\r\n    setRegister({ ...register, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  //get file as user input\r\n  const onChangeFileUserForm = function (event) {\r\n    setRegister({ ...register, userAvatar: event.target.files[0] });\r\n    console.log(event.target.files[0]);\r\n    // if (event.target.files && event.target.files[0]) {\r\n    //   let reader = new FileReader();\r\n    //   let file = event.target.files[0];\r\n    //   reader.onloadend = () => {\r\n    //     setRegister({\r\n    //       ...register,\r\n    //       userAvatar: file,\r\n    //     });\r\n    //   };\r\n    //   reader.readAsDataURL(file);\r\n  };\r\n\r\n  // when the data changes, add new data for register state\r\n  // const { userEmail, userPassword, confirmPassword, userName } = register;\r\n\r\n  // const registerData = userRegister(register);\r\n  // console.log(registerData);\r\n  console.log(register);\r\n  const userRegister = (e) => {\r\n    e.preventDefault();\r\n    console.log(register);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"userEmail\", register.userEmail);\r\n    formData.append(\"userPassword\", register.userPassword);\r\n    formData.append(\"confirmPassword\", register.confirmPassword);\r\n    formData.append(\"userName\", register.userName);\r\n    formData.append(\"userAvatar\", register.userAvatar);\r\n\r\n    axios\r\n      .post(`${apiUrl}/auth/register`, formData)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (response.data.success) {\r\n          localStorage.setItem(\r\n            LOCAL_STORAGE_TOKEN_NAME,\r\n            response.data.accessToken\r\n          );\r\n          history.push(\"/login\");\r\n          loadUser();\r\n          return response;\r\n        }\r\n        if (!response.success) {\r\n          alert(response.data.message);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response) return error.response;\r\n        else return { success: false, message: error.message };\r\n      });\r\n\r\n    // const registerUser = async (formData) => {\r\n    //   try {\r\n    //     const response = await axios.post(`${apiUrl}/auth/register`, formData);\r\n    //     console.log(register);\r\n\r\n    //     if (response.data.success)\r\n    //       localStorage.setItem(\r\n    //         LOCAL_STORAGE_TOKEN_NAME,\r\n    //         response.data.accessToken\r\n    //       );\r\n\r\n    //     await loadUser();\r\n\r\n    //     return response.data;\r\n    //   } catch (error) {\r\n    //     if (error.response.data) return error.response.data;\r\n    //     else return { success: false, message: error.message };\r\n    //   }\r\n    // };\r\n\r\n    // if (userPassword != confirmPassword) {\r\n    //   alert(\"Passwords do not match\");\r\n    // }\r\n\r\n    // try {\r\n    //   const registerData = await registerUser(register);\r\n    //   if (!registerData.success) {\r\n    //     alert(\"Registration failed\");\r\n    //     console.log(registerData.message);\r\n    //   }\r\n    //   history.push(\"/login\");\r\n    // } catch (e) {\r\n    //   console.log(e);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"l-form\">\r\n        <form\r\n          onSubmit={userRegister}\r\n          enctype=\"multipart/form-data\"\r\n          className=\"form\"\r\n        >\r\n          <img src=\"/img/logo1.svg\" alt=\"\" />\r\n          <h2 className=\"form__title\">Register</h2>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userEmail\"\r\n              value={register.userEmail}\r\n              required\r\n              onChange={(event) => {\r\n                onChangeRegisterForm(event);\r\n              }}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Email\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userPassword\"\r\n              value={register.userPassword}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Password\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"confirmPassword\"\r\n              value={register.confirmPassword}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Confirm Password\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form__input\"\r\n              placeholder=\" \"\r\n              name=\"userName\"\r\n              value={register.userName}\r\n              required\r\n              onChange={onChangeRegisterForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Your name\r\n            </label>\r\n          </div>\r\n          <div className=\"form__div\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"form__input\"\r\n              onChange={onChangeFileUserForm}\r\n            />\r\n            <label htmlFor className=\"form__label\">\r\n              Your avartar\r\n            </label>\r\n          </div>\r\n          <input\r\n            type=\"submit\"\r\n            className=\"form__button\"\r\n            defaultValue=\"Sign In\"\r\n            value=\"Register\"\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}