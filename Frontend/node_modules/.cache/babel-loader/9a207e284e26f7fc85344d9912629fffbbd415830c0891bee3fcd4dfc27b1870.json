{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\farvoriteContext.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { favoriteReducer } from \"../reducers/favoriteReducer\";\nimport { apiUrl, DELETE_FAVORITE, FAVORITES_LOADED_FAIL, FAVORITES_LOADED_SUCCESS, FAVORITE_CLICK } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FavoriteContext = /*#__PURE__*/createContext();\nconst FavoriteContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // State\n  const [favoriteState, dispatch] = useReducer(favoriteReducer, {\n    favoriteHome: {},\n    favorite: {},\n    favorites: [],\n    favoritesLoading: true\n  });\n  const favoriteFirst = favoriteState.favorites[favoriteState.favorites.length - 1];\n\n  // Get all favorites\n  const getFavorites = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/favorites/datafavorites`);\n      if (response.data.success) {\n        dispatch({\n          type: FAVORITES_LOADED_SUCCESS,\n          payload: response.data.favorites\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: FAVORITES_LOADED_FAIL\n      });\n    }\n  };\n\n  //   // Find id favorite when user is updating favorite\n  //   const findIDFavorite = (favoriteId) => {\n  //     const favorite = favoriteState.favorites.find(\n  //       (favorite) => favorite._id === favoriteId\n  //     );\n  //     dispatch({ type: FAVORITE_CLICK, payload: favorite });\n  //   };\n\n  // useEffect(() => getFavorites(), []);\n  // // Find id favorite when user click play favorite\n  // const getIdFavoriteHome = (favoriteIdHome) => {\n  //   const favoriteGet = favoriteState.favorites.find(\n  //     (favorite) => favorite._id === favoriteIdHome\n  //   );\n  //   dispatch({\n  //     type: FAVORITE_CLICK_HOME,\n  //     payload: favoriteGet,\n  //   });\n  // };\n  // Delete favorite\n  const deleteFavorite = async favoriteId => {\n    try {\n      const response = await axios.delete(`${apiUrl}/favorites/delete/${favoriteId}`);\n      if (response.data.success) dispatch({\n        type: DELETE_FAVORITE,\n        payload: favoriteId\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // favorite context data\n  const favoriteContextData = {\n    favoriteState,\n    getFavorites,\n    // findIDFavorite,\n    // getIdFavoriteHome,\n    favoriteFirst,\n    deleteFavorite\n  };\n  return /*#__PURE__*/_jsxDEV(FavoriteContext.Provider, {\n    value: favoriteContextData,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoriteContextProvider, \"OIPg4lcMXeyLP6TNTgkvRcL1N1Y=\");\n_c = FavoriteContextProvider;\nexport default FavoriteContextProvider;\nvar _c;\n$RefreshReg$(_c, \"FavoriteContextProvider\");","map":{"version":3,"names":["axios","createContext","useEffect","useReducer","favoriteReducer","apiUrl","DELETE_FAVORITE","FAVORITES_LOADED_FAIL","FAVORITES_LOADED_SUCCESS","FAVORITE_CLICK","FavoriteContext","FavoriteContextProvider","children","favoriteState","dispatch","favoriteHome","favorite","favorites","favoritesLoading","favoriteFirst","length","getFavorites","response","get","data","success","type","payload","error","deleteFavorite","favoriteId","delete","console","log","favoriteContextData"],"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/farvoriteContext.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useEffect, useReducer } from \"react\";\r\nimport { favoriteReducer } from \"../reducers/favoriteReducer\";\r\nimport {\r\n  apiUrl,\r\n  DELETE_FAVORITE,\r\n  FAVORITES_LOADED_FAIL,\r\n  FAVORITES_LOADED_SUCCESS,\r\n  FAVORITE_CLICK,\r\n} from \"./constants\";\r\n\r\nexport const FavoriteContext = createContext();\r\n\r\nconst FavoriteContextProvider = ({ children }) => {\r\n  // State\r\n  const [favoriteState, dispatch] = useReducer(favoriteReducer, {\r\n    favoriteHome: {},\r\n    favorite: {},\r\n    favorites: [],\r\n    favoritesLoading: true,\r\n  });\r\n\r\n  const favoriteFirst =\r\n    favoriteState.favorites[favoriteState.favorites.length - 1];\r\n\r\n  // Get all favorites\r\n  const getFavorites = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/favorites/datafavorites`);\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: FAVORITES_LOADED_SUCCESS,\r\n          payload: response.data.favorites,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: FAVORITES_LOADED_FAIL });\r\n    }\r\n  };\r\n\r\n  //   // Find id favorite when user is updating favorite\r\n  //   const findIDFavorite = (favoriteId) => {\r\n  //     const favorite = favoriteState.favorites.find(\r\n  //       (favorite) => favorite._id === favoriteId\r\n  //     );\r\n  //     dispatch({ type: FAVORITE_CLICK, payload: favorite });\r\n  //   };\r\n\r\n  // useEffect(() => getFavorites(), []);\r\n  // // Find id favorite when user click play favorite\r\n  // const getIdFavoriteHome = (favoriteIdHome) => {\r\n  //   const favoriteGet = favoriteState.favorites.find(\r\n  //     (favorite) => favorite._id === favoriteIdHome\r\n  //   );\r\n  //   dispatch({\r\n  //     type: FAVORITE_CLICK_HOME,\r\n  //     payload: favoriteGet,\r\n  //   });\r\n  // };\r\n  // Delete favorite\r\n  const deleteFavorite = async (favoriteId) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `${apiUrl}/favorites/delete/${favoriteId}`\r\n      );\r\n      if (response.data.success)\r\n        dispatch({ type: DELETE_FAVORITE, payload: favoriteId });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // favorite context data\r\n  const favoriteContextData = {\r\n    favoriteState,\r\n    getFavorites,\r\n    // findIDFavorite,\r\n    // getIdFavoriteHome,\r\n    favoriteFirst,\r\n    deleteFavorite,\r\n  };\r\n  return (\r\n    <FavoriteContext.Provider value={favoriteContextData}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </FavoriteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default FavoriteContextProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC5D,SAASC,eAAe,QAAQ,6BAA6B;AAC7D,SACEC,MAAM,EACNC,eAAe,EACfC,qBAAqB,EACrBC,wBAAwB,EACxBC,cAAc,QACT,aAAa;AAAC;AAErB,OAAO,MAAMC,eAAe,gBAAGT,aAAa,EAAE;AAE9C,MAAMU,uBAAuB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EAC3C;EACA,MAAM,CAACC,aAAa,EAAEC,QAAQ,CAAC,GAAGX,UAAU,CAACC,eAAe,EAAE;IAC5DW,YAAY,EAAE,CAAC,CAAC;IAChBC,QAAQ,EAAE,CAAC,CAAC;IACZC,SAAS,EAAE,EAAE;IACbC,gBAAgB,EAAE;EACpB,CAAC,CAAC;EAEF,MAAMC,aAAa,GACjBN,aAAa,CAACI,SAAS,CAACJ,aAAa,CAACI,SAAS,CAACG,MAAM,GAAG,CAAC,CAAC;;EAE7D;EACA,MAAMC,YAAY,GAAG,YAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAAE,GAAElB,MAAO,0BAAyB,CAAC;MACrE,IAAIiB,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzBX,QAAQ,CAAC;UACPY,IAAI,EAAElB,wBAAwB;UAC9BmB,OAAO,EAAEL,QAAQ,CAACE,IAAI,CAACP;QACzB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdd,QAAQ,CAAC;QAAEY,IAAI,EAAEnB;MAAsB,CAAC,CAAC;IAC3C;EACF,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMsB,cAAc,GAAG,MAAOC,UAAU,IAAK;IAC3C,IAAI;MACF,MAAMR,QAAQ,GAAG,MAAMtB,KAAK,CAAC+B,MAAM,CAChC,GAAE1B,MAAO,qBAAoByB,UAAW,EAAC,CAC3C;MACD,IAAIR,QAAQ,CAACE,IAAI,CAACC,OAAO,EACvBX,QAAQ,CAAC;QAAEY,IAAI,EAAEpB,eAAe;QAAEqB,OAAO,EAAEG;MAAW,CAAC,CAAC;IAC5D,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdI,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMM,mBAAmB,GAAG;IAC1BrB,aAAa;IACbQ,YAAY;IACZ;IACA;IACAF,aAAa;IACbU;EACF,CAAC;EACD,oBACE,QAAC,eAAe,CAAC,QAAQ;IAAC,KAAK,EAAEK,mBAAoB;IAAA,WAClD,GAAG,EACHtB,QAAQ,EAAE,GAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACW;AAE/B,CAAC;AAAC,GA1EID,uBAAuB;AAAA,KAAvBA,uBAAuB;AA4E7B,eAAeA,uBAAuB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}