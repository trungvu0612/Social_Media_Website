{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\page\\\\admin\\\\component\\\\postPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { PostContext } from \"../../../contexts/postContext\";\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\nimport PostAdmin from \"./categorymusic/postAdmin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PostPage() {\n  _s();\n\n  // get global data by useContext\n  const {\n    postState: {\n      posts,\n      postsLoading\n    },\n    getPosts,\n    searchpost\n  } = useContext(PostContext); // start get all posts\n\n  useEffect(() => getPosts(), []); // search filter post\n\n  const postData = posts.filter(post => {\n    if (searchpost == \"\") {\n      return post;\n    }\n\n    return post.user.userName == searchpost;\n  });\n  console.log(postData);\n\n  if (postsLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100vh\",\n        position: \"absolute\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Ripple, {\n        style: {\n          top: \"50%\",\n          left: \"50%\",\n          position: \"relative\",\n          transform: \"translate(-50%, -50%)\"\n        },\n        color: \"#be97e8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), \" \", \";\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-content menu-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overview-boxes\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__items\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"title\",\n            children: \"Post List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"list__name\",\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"list__content\",\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"list__music\",\n              children: \"Music\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list__post-admin\",\n            children: posts.map(post => /*#__PURE__*/_jsxDEV(PostAdmin, {\n              post: post\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(PostPage, \"jhluEuezw3X97G1IuFlxHBerSBk=\");\n\n_c = PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/page/admin/component/postPage.jsx"],"names":["React","useContext","useEffect","PostContext","Ripple","PostAdmin","PostPage","postState","posts","postsLoading","getPosts","searchpost","postData","filter","post","user","userName","console","log","width","height","position","top","left","transform","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AACjC;AACA,QAAM;AACJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KADP;AAEJC,IAAAA,QAFI;AAGJC,IAAAA;AAHI,MAIFV,UAAU,CAACE,WAAD,CAJd,CAFiC,CAQjC;;AACAD,EAAAA,SAAS,CAAC,MAAMQ,QAAQ,EAAf,EAAmB,EAAnB,CAAT,CATiC,CAWjC;;AACA,QAAME,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAU;AACtC,QAAIH,UAAU,IAAI,EAAlB,EAAsB;AACpB,aAAOG,IAAP;AACD;;AACD,WAAOA,IAAI,CAACC,IAAL,CAAUC,QAAV,IAAsBL,UAA7B;AACD,GALgB,CAAjB;AAMAM,EAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;;AAEA,MAAIH,YAAJ,EAAkB;AAChB,wBACE;AAAK,MAAA,KAAK,EAAE;AAAEU,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,MAAM,EAAE,OAAzB;AAAkCC,QAAAA,QAAQ,EAAE;AAA5C,OAAZ;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,GAAG,EAAE,KADA;AAELC,UAAAA,IAAI,EAAE,KAFD;AAGLF,UAAAA,QAAQ,EAAE,UAHL;AAILG,UAAAA,SAAS,EAAE;AAJN,SADT;AAOE,QAAA,KAAK,EAAC;AAPR;AAAA;AAAA;AAAA;AAAA,cADF,EASK,GATL,OAUI,GAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAcD,GAfD,MAeO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACE;AAAI,YAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,cAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAI,cAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAQE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,sBACGhB,KAAK,CAACiB,GAAN,CAAWX,IAAD,iBACT,QAAC,SAAD;AAAW,cAAA,IAAI,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;AACF;;GAzDuBR,Q;;KAAAA,Q","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport { PostContext } from \"../../../contexts/postContext\";\r\nimport Ripple from \"@bit/joshk.react-spinners-css.ripple\";\r\nimport PostAdmin from \"./categorymusic/postAdmin\";\r\n\r\nexport default function PostPage() {\r\n  // get global data by useContext\r\n  const {\r\n    postState: { posts, postsLoading },\r\n    getPosts,\r\n    searchpost,\r\n  } = useContext(PostContext);\r\n\r\n  // start get all posts\r\n  useEffect(() => getPosts(), []);\r\n\r\n  // search filter post\r\n  const postData = posts.filter((post) => {\r\n    if (searchpost == \"\") {\r\n      return post;\r\n    }\r\n    return post.user.userName == searchpost;\r\n  });\r\n  console.log(postData);\r\n\r\n  if (postsLoading) {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100vh\", position: \"absolute\" }}>\r\n        <Ripple\r\n          style={{\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            position: \"relative\",\r\n            transform: \"translate(-50%, -50%)\",\r\n          }}\r\n          color=\"#be97e8\"\r\n        />{\" \"}\r\n        ;{\" \"}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"post-content menu-bar\">\r\n        <div className=\"overview-boxes\">\r\n          <div className=\"post__items\">\r\n            <h3 className=\"title\">Post List</h3>\r\n            <div className=\"list\">\r\n              <h4 className=\"list__name\">Author</h4>\r\n              <h4 className=\"list__content\">Content</h4>\r\n              <h4 className=\"list__music\">Music</h4>\r\n            </div>\r\n\r\n            <div className=\"list__post-admin\">\r\n              {posts.map((post) => (\r\n                <PostAdmin post={post} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}