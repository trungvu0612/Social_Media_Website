{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\musicContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { musicReducer } from \"../reducers/musicReducer\";\nimport { apiUrl, DELETE_MUSIC, MUSICS_LOADED_FAIL, MUSICS_LOADED_SUCCESS, MUSIC_CLICK, MUSIC_CLICK_HOME } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MusicContext = /*#__PURE__*/createContext();\n\nconst MusicContextProvider = ({\n  children\n}) => {\n  _s();\n\n  // State\n  const [musicState, dispatch] = useReducer(musicReducer, {\n    musicHome: {},\n    music: {},\n    musics: [],\n    musicsLoading: true\n  });\n  const musicFirst = musicState.musics;\n  console.log(musicFirst); // Get all posts\n\n  const getMusics = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/music`);\n\n      if (response.data.success) {\n        dispatch({\n          type: MUSICS_LOADED_SUCCESS,\n          payload: response.data.musics\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: MUSICS_LOADED_FAIL\n      });\n    }\n  }; // Find id music when user is updating post\n\n\n  const findIDMusic = musicId => {\n    const music = musicState.musics.find(music => music._id === musicId);\n    dispatch({\n      type: MUSIC_CLICK,\n      payload: music\n    });\n  };\n\n  useEffect(() => getMusics(), []); // Find id music when user click play music\n\n  const getIdMusicHome = musicIdHome => {\n    const musicGet = musicState.musics.find(music => music._id === musicIdHome);\n    dispatch({\n      type: MUSIC_CLICK_HOME,\n      payload: musicGet\n    });\n  }; // music context data\n\n\n  const musicContextData = {\n    musicState,\n    getMusics,\n    findIDMusic,\n    getIdMusicHome\n  };\n  return /*#__PURE__*/_jsxDEV(MusicContext.Provider, {\n    value: musicContextData,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MusicContextProvider, \"+amaOcdSTwY+Fmx0kH0KAi39hYw=\");\n\n_c = MusicContextProvider;\nexport default MusicContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"MusicContextProvider\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/musicContext.js"],"names":["axios","createContext","useEffect","useReducer","musicReducer","apiUrl","DELETE_MUSIC","MUSICS_LOADED_FAIL","MUSICS_LOADED_SUCCESS","MUSIC_CLICK","MUSIC_CLICK_HOME","MusicContext","MusicContextProvider","children","musicState","dispatch","musicHome","music","musics","musicsLoading","musicFirst","console","log","getMusics","response","get","data","success","type","payload","error","findIDMusic","musicId","find","_id","getIdMusicHome","musicIdHome","musicGet","musicContextData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,SAASC,YAAT,QAA6B,0BAA7B;AACA,SACEC,MADF,EAEEC,YAFF,EAGEC,kBAHF,EAIEC,qBAJF,EAKEC,WALF,EAMEC,gBANF,QAOO,aAPP;;AASA,OAAO,MAAMC,YAAY,gBAAGV,aAAa,EAAlC;;AAEP,MAAMW,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC7C;AACA,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBZ,UAAU,CAACC,YAAD,EAAe;AACtDY,IAAAA,SAAS,EAAE,EAD2C;AAEtDC,IAAAA,KAAK,EAAE,EAF+C;AAGtDC,IAAAA,MAAM,EAAE,EAH8C;AAItDC,IAAAA,aAAa,EAAE;AAJuC,GAAf,CAAzC;AAOA,QAAMC,UAAU,GAAGN,UAAU,CAACI,MAA9B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAV6C,CAY7C;;AACA,QAAMG,SAAS,GAAG,YAAY;AAC5B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,GAAN,CAAW,GAAEpB,MAAO,QAApB,CAAvB;;AACA,UAAImB,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBZ,QAAAA,QAAQ,CAAC;AACPa,UAAAA,IAAI,EAAEpB,qBADC;AAEPqB,UAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcR;AAFhB,SAAD,CAAR;AAID;AACF,KARD,CAQE,OAAOY,KAAP,EAAc;AACdf,MAAAA,QAAQ,CAAC;AAAEa,QAAAA,IAAI,EAAErB;AAAR,OAAD,CAAR;AACD;AACF,GAZD,CAb6C,CA2B7C;;;AACA,QAAMwB,WAAW,GAAIC,OAAD,IAAa;AAC/B,UAAMf,KAAK,GAAGH,UAAU,CAACI,MAAX,CAAkBe,IAAlB,CAAwBhB,KAAD,IAAWA,KAAK,CAACiB,GAAN,KAAcF,OAAhD,CAAd;AACAjB,IAAAA,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAEnB,WAAR;AAAqBoB,MAAAA,OAAO,EAAEZ;AAA9B,KAAD,CAAR;AACD,GAHD;;AAKAf,EAAAA,SAAS,CAAC,MAAMqB,SAAS,EAAhB,EAAoB,EAApB,CAAT,CAjC6C,CAkC7C;;AACA,QAAMY,cAAc,GAAIC,WAAD,IAAiB;AACtC,UAAMC,QAAQ,GAAGvB,UAAU,CAACI,MAAX,CAAkBe,IAAlB,CACdhB,KAAD,IAAWA,KAAK,CAACiB,GAAN,KAAcE,WADV,CAAjB;AAGArB,IAAAA,QAAQ,CAAC;AAAEa,MAAAA,IAAI,EAAElB,gBAAR;AAA0BmB,MAAAA,OAAO,EAAEQ;AAAnC,KAAD,CAAR;AACD,GALD,CAnC6C,CA0C7C;;;AACA,QAAMC,gBAAgB,GAAG;AACvBxB,IAAAA,UADuB;AAEvBS,IAAAA,SAFuB;AAGvBQ,IAAAA,WAHuB;AAIvBI,IAAAA;AAJuB,GAAzB;AAMA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEG,gBAA9B;AAAA,eACG,GADH,EAEGzB,QAFH,EAEa,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvDD;;GAAMD,oB;;KAAAA,oB;AAyDN,eAAeA,oBAAf","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useEffect, useReducer } from \"react\";\r\nimport { musicReducer } from \"../reducers/musicReducer\";\r\nimport {\r\n  apiUrl,\r\n  DELETE_MUSIC,\r\n  MUSICS_LOADED_FAIL,\r\n  MUSICS_LOADED_SUCCESS,\r\n  MUSIC_CLICK,\r\n  MUSIC_CLICK_HOME,\r\n} from \"./constants\";\r\n\r\nexport const MusicContext = createContext();\r\n\r\nconst MusicContextProvider = ({ children }) => {\r\n  // State\r\n  const [musicState, dispatch] = useReducer(musicReducer, {\r\n    musicHome: {},\r\n    music: {},\r\n    musics: [],\r\n    musicsLoading: true,\r\n  });\r\n\r\n  const musicFirst = musicState.musics;\r\n  console.log(musicFirst);\r\n\r\n  // Get all posts\r\n  const getMusics = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/music`);\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: MUSICS_LOADED_SUCCESS,\r\n          payload: response.data.musics,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: MUSICS_LOADED_FAIL });\r\n    }\r\n  };\r\n\r\n  // Find id music when user is updating post\r\n  const findIDMusic = (musicId) => {\r\n    const music = musicState.musics.find((music) => music._id === musicId);\r\n    dispatch({ type: MUSIC_CLICK, payload: music });\r\n  };\r\n\r\n  useEffect(() => getMusics(), []);\r\n  // Find id music when user click play music\r\n  const getIdMusicHome = (musicIdHome) => {\r\n    const musicGet = musicState.musics.find(\r\n      (music) => music._id === musicIdHome\r\n    );\r\n    dispatch({ type: MUSIC_CLICK_HOME, payload: musicGet });\r\n  };\r\n\r\n  // music context data\r\n  const musicContextData = {\r\n    musicState,\r\n    getMusics,\r\n    findIDMusic,\r\n    getIdMusicHome,\r\n  };\r\n  return (\r\n    <MusicContext.Provider value={musicContextData}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </MusicContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MusicContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}