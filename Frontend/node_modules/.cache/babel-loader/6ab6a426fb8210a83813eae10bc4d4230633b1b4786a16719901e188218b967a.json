{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\authContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useEffect, useContext, useState } from \"react\";\nimport { authReducer } from \"../reducers/authReducer\";\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME, UPDATE_USER } from \"./constants\";\nimport axios from \"axios\";\nimport setAuthToken from \"./setAuthToken\";\n\n// create context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// use useReducer manage the state of the web\nconst AuthContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // This object = first state on authReducer\n  const [authState, dispatch] = useReducer(authReducer, {\n    // when the user is not logged in to the web\n    authLoading: true,\n    //  the user is not authenticated\n    isAuthenticated: false,\n    // without any user information\n    user: null\n  });\n\n  // Authenticate user\n  const loadUser = async () => {\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\n      setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\n    }\n    try {\n      const response = await axios.get(`${apiUrl}/auth`);\n      if (response.data.success) {\n        dispatch({\n          type: \"SET_AUTH\",\n          payload: {\n            isAuthenticated: true,\n            user: response.data.user\n          }\n        });\n      }\n    } catch (error) {\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n      setAuthToken(null);\n      dispatch({\n        type: \"SET_AUTH\",\n        payload: {\n          isAuthenticated: false,\n          user: null\n        }\n      });\n    }\n  };\n  useEffect(() => loadUser(), []);\n\n  // Login\n  const loginUser = async userForm => {\n    try {\n      // Send req for sever\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\n      // if successful, return accessToken\n      if (response.data.success) localStorage.setItem(LOCAL_STORAGE_TOKEN_NAME, response.data.accessToken);\n      await loadUser();\n      // return response user data\n      return response.data;\n    } catch (error) {\n      if (error.response.data) return error.response.data;else return {\n        success: false,\n        message: error.message\n      };\n    }\n  };\n\n  // Logout\n  const logoutUser = async () => {\n    dispatch({\n      type: \"SET_AUTH\",\n      payload: {\n        isAuthenticated: false,\n        user: null\n      }\n    });\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n    // setTimeout(() => {\n    //   localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\n    // }, 1000);\n  };\n\n  // Context data\n  const authContextData = {\n    loginUser,\n    logoutUser,\n    authState\n  };\n\n  // Return provider\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: authContextData,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"2MSqB/BCkm8kH+wj1Fnpxp5w0Ok=\");\n_c = AuthContextProvider;\nexport default AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","useContext","useState","authReducer","apiUrl","LOCAL_STORAGE_TOKEN_NAME","UPDATE_USER","axios","setAuthToken","AuthContext","AuthContextProvider","children","authState","dispatch","authLoading","isAuthenticated","user","loadUser","localStorage","response","get","data","success","type","payload","error","removeItem","loginUser","userForm","post","setItem","accessToken","message","logoutUser","authContextData"],"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/authContext.js"],"sourcesContent":["import {\r\n  createContext,\r\n  useReducer,\r\n  useEffect,\r\n  useContext,\r\n  useState,\r\n} from \"react\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { apiUrl, LOCAL_STORAGE_TOKEN_NAME, UPDATE_USER } from \"./constants\";\r\nimport axios from \"axios\";\r\nimport setAuthToken from \"./setAuthToken\";\r\n\r\n// create context\r\nexport const AuthContext = createContext();\r\n\r\n// use useReducer manage the state of the web\r\nconst AuthContextProvider = ({ children }) => {\r\n  // This object = first state on authReducer\r\n  const [authState, dispatch] = useReducer(authReducer, {\r\n    // when the user is not logged in to the web\r\n    authLoading: true,\r\n    //  the user is not authenticated\r\n    isAuthenticated: false,\r\n    // without any user information\r\n    user: null,\r\n  });\r\n\r\n  // Authenticate user\r\n  const loadUser = async () => {\r\n    if (localStorage[LOCAL_STORAGE_TOKEN_NAME]) {\r\n      setAuthToken(localStorage[LOCAL_STORAGE_TOKEN_NAME]);\r\n    }\r\n\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/auth`);\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: \"SET_AUTH\",\r\n          payload: { isAuthenticated: true, user: response.data.user },\r\n        });\r\n      }\r\n    } catch (error) {\r\n      localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n      setAuthToken(null);\r\n      dispatch({\r\n        type: \"SET_AUTH\",\r\n        payload: { isAuthenticated: false, user: null },\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => loadUser(), []);\r\n\r\n  // Login\r\n  const loginUser = async (userForm) => {\r\n    try {\r\n      // Send req for sever\r\n      const response = await axios.post(`${apiUrl}/auth/login`, userForm);\r\n      // if successful, return accessToken\r\n      if (response.data.success)\r\n        localStorage.setItem(\r\n          LOCAL_STORAGE_TOKEN_NAME,\r\n          response.data.accessToken\r\n        );\r\n\r\n      await loadUser();\r\n      // return response user data\r\n      return response.data;\r\n    } catch (error) {\r\n      if (error.response.data) return error.response.data;\r\n      else return { success: false, message: error.message };\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logoutUser = async () => {\r\n    dispatch({\r\n      type: \"SET_AUTH\",\r\n      payload: { isAuthenticated: false, user: null },\r\n    });\r\n    localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n    // setTimeout(() => {\r\n    //   localStorage.removeItem(LOCAL_STORAGE_TOKEN_NAME);\r\n    // }, 1000);\r\n  };\r\n\r\n  // Context data\r\n  const authContextData = {\r\n    loginUser,\r\n    logoutUser,\r\n    authState,\r\n  };\r\n\r\n  // Return provider\r\n  return (\r\n    <AuthContext.Provider value={authContextData}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}