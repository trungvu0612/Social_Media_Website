{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\postContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useReducer } from \"react\";\nimport { apiPost, POSTS_LOADED_FAIL, POSTS_LOADED_SUCCESS } from \"../contexts/constants\";\nimport { postReducer } from \"../reducers/postReducer\";\nimport { apiUrl } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostContext = /*#__PURE__*/createContext();\n\nconst PostContextProvider = ({\n  children\n}) => {\n  _s();\n\n  // State\n  const [postState, dispatch] = useReducer(postReducer, {\n    post: null,\n    posts: [],\n    postsLoading: true\n  }); // Get all posts\n\n  const getPosts = async () => {\n    try {\n      const response = await axios.get(`${apiPost}/datapost`);\n\n      if (response.data.success) {\n        console.log(response.data.posts);\n        dispatch({\n          type: POSTS_LOADED_SUCCESS,\n          payload: response.data.posts\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: POSTS_LOADED_FAIL\n      });\n    }\n  }; // post context data\n\n\n  const postContextData = {\n    postState,\n    getPosts\n  };\n  return /*#__PURE__*/_jsxDEV(PostContext.Provider, {\n    value: postContextData,\n    children: [\" \", \" \", \" \", children, \" \", \" \", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 14\n  }, this);\n};\n\n_s(PostContextProvider, \"Cm5dJxWnQWG+h5iXcnZWefOEDOI=\");\n\n_c = PostContextProvider;\nexport default PostContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostContextProvider\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/postContext.js"],"names":["axios","createContext","useReducer","apiPost","POSTS_LOADED_FAIL","POSTS_LOADED_SUCCESS","postReducer","apiUrl","PostContext","PostContextProvider","children","postState","dispatch","post","posts","postsLoading","getPosts","response","get","data","success","console","log","type","payload","error","postContextData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SACIC,OADJ,EAEIC,iBAFJ,EAGIC,oBAHJ,QAIO,uBAJP;AAKA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;;AAEP,MAAMQ,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC1C;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBV,UAAU,CAACI,WAAD,EAAc;AAClDO,IAAAA,IAAI,EAAE,IAD4C;AAElDC,IAAAA,KAAK,EAAE,EAF2C;AAGlDC,IAAAA,YAAY,EAAE;AAHoC,GAAd,CAAxC,CAF0C,CAQ1C;;AACA,QAAMC,QAAQ,GAAG,YAAW;AACxB,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,GAAEf,OAAQ,WAArB,CAAvB;;AACA,UAAIc,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACvBC,QAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACE,IAAT,CAAcL,KAA1B;AACAF,QAAAA,QAAQ,CAAC;AACLW,UAAAA,IAAI,EAAElB,oBADD;AAELmB,UAAAA,OAAO,EAAEP,QAAQ,CAACE,IAAT,CAAcL;AAFlB,SAAD,CAAR;AAIH;AACJ,KATD,CASE,OAAOW,KAAP,EAAc;AACZb,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAEnB;AAAR,OAAD,CAAR;AACH;AACJ,GAbD,CAT0C,CAwB1C;;;AACA,QAAMsB,eAAe,GAAG;AACpBf,IAAAA,SADoB;AAEpBK,IAAAA;AAFoB,GAAxB;AAIA,sBAAS,QACL,WADK,CACO,QADP;AACgB,IAAA,KAAK,EAAKU,eAD1B;AAAA,oBACgD,GADhD,OACwDhB,QADxD,OACqE,GADrE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAIH,CAjCD;;GAAMD,mB;;KAAAA,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useReducer } from \"react\";\r\nimport {\r\n    apiPost,\r\n    POSTS_LOADED_FAIL,\r\n    POSTS_LOADED_SUCCESS,\r\n} from \"../contexts/constants\";\r\nimport { postReducer } from \"../reducers/postReducer\";\r\n\r\nimport { apiUrl } from \"./constants\";\r\n\r\nexport const PostContext = createContext();\r\n\r\nconst PostContextProvider = ({ children }) => {\r\n    // State\r\n    const [postState, dispatch] = useReducer(postReducer, {\r\n        post: null,\r\n        posts: [],\r\n        postsLoading: true,\r\n    });\r\n\r\n    // Get all posts\r\n    const getPosts = async() => {\r\n        try {\r\n            const response = await axios.get(`${apiPost}/datapost`);\r\n            if (response.data.success) {\r\n                console.log(response.data.posts);\r\n                dispatch({\r\n                    type: POSTS_LOADED_SUCCESS,\r\n                    payload: response.data.posts,\r\n                });\r\n            }\r\n        } catch (error) {\r\n            dispatch({ type: POSTS_LOADED_FAIL });\r\n        }\r\n    };\r\n\r\n    // post context data\r\n    const postContextData = {\r\n        postState,\r\n        getPosts,\r\n    };\r\n    return ( <\r\n        PostContext.Provider value = { postContextData } > { \" \" } { children } { \" \" } <\r\n        /PostContext.Provider>\r\n    );\r\n};\r\n\r\nexport default PostContextProvider;"]},"metadata":{},"sourceType":"module"}