{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\component\\\\checkRouting\\\\checkRedirect.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Redirect, Route } from \"react-router\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CheckRedirect = ({\n  component: Component,\n  ...rest\n}) => {\n  _s();\n\n  const {\n    authState: {\n      authLoading,\n      isAuthenticated\n    }\n  } = useContext(AuthContext);\n\n  if (authLoading) {}\n\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Component, { ...rest,\n        ...props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckRedirect, \"SlXQvAVOyDl/xC3FAPRQMRGAI6g=\");\n\n_c = CheckRedirect;\nexport default CheckRedirect;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckRedirect\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/component/checkRouting/checkRedirect.js"],"names":["useContext","Redirect","Route","AuthContext","CheckRedirect","component","Component","rest","authState","authLoading","isAuthenticated","props"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,cAAhC;AACA,SAASC,WAAT,QAA4B,4BAA5B;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AAAA;;AAC3D,QAAM;AACJC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf;AADP,MAEFV,UAAU,CAACG,WAAD,CAFd;;AAIA,MAAIM,WAAJ,EAAiB,CAChB;;AACD,sBACE,QAAC,KAAD,OACMF,IADN;AAEE,IAAA,MAAM,EAAGI,KAAD,IACND,eAAe,gBACb;AAAA,8BACE,QAAC,SAAD,OAAeH,IAAf;AAAA,WAAyBI;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,EACqC,GADrC;AAAA,oBADa,gBAKb,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CArBD;;GAAMP,a;;KAAAA,a;AAsBN,eAAeA,aAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { Redirect, Route } from \"react-router\";\r\nimport { AuthContext } from \"../../contexts/authContext\";\r\n\r\nconst CheckRedirect = ({ component: Component, ...rest }) => {\r\n  const {\r\n    authState: { authLoading, isAuthenticated },\r\n  } = useContext(AuthContext);\r\n\r\n  if (authLoading) {\r\n  }\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <>\r\n            <Component {...rest} {...props} />{\" \"}\r\n          </>\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default CheckRedirect;\r\n"]},"metadata":{},"sourceType":"module"}