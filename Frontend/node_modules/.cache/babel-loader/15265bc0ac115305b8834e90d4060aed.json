{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\cmtContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useReducer } from \"react\";\nimport { commentReducer } from \"../reducers/commentReducer\";\nimport { apiUrl, COMMENTS_LOADED_FAIL, COMMENTS_LOADED_SUCCESS } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CommentContext = /*#__PURE__*/createContext();\n\nconst CommentContextProvider = ({\n  children\n}) => {\n  _s();\n\n  // State\n  const [commentState, dispatch] = useReducer(commentReducer, {\n    commentHome: {},\n    comment: {},\n    comments: [],\n    commentsLoading: true\n  }); // Get all posts\n\n  const getComments = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/comments/datacmts`);\n\n      if (response.data.success) {\n        dispatch({\n          type: COMMENTS_LOADED_SUCCESS,\n          payload: response.data.comments\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: COMMENTS_LOADED_FAIL\n      });\n    }\n  }; //   // Find id comment when user is updating post\n  //   const findIDComment = (commentId) => {\n  //     const comment = commentState.comments.find(\n  //       (comment) => comment._id === commentId\n  //     );\n  //     dispatch({ type: COMMENT_CLICK, payload: comment });\n  //   };\n  //   useEffect(() => getComments(), []);\n  //   // Find id comment when user click play comment\n  //   const getIdCommentHome = (commentIdHome) => {\n  //     const commentGet = commentState.comments.find(\n  //       (comment) => comment._id === commentIdHome\n  //     );\n  //     dispatch({\n  //       type: COMMENT_CLICK_HOME,\n  //       payload: commentGet,\n  //     });\n  //   };\n  // comment context data\n\n\n  const commentContextData = {\n    commentState,\n    getComments // findIDComment,\n    // getIdCommentHome,\n\n  };\n  return /*#__PURE__*/_jsxDEV(CommentContext.Provider, {\n    value: commentContextData,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentContextProvider, \"OQOIlHRNPQjaHwQa7sOjdSAy3tI=\");\n\n_c = CommentContextProvider;\nexport default CommentContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentContextProvider\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/cmtContext.js"],"names":["axios","createContext","useReducer","commentReducer","apiUrl","COMMENTS_LOADED_FAIL","COMMENTS_LOADED_SUCCESS","CommentContext","CommentContextProvider","children","commentState","dispatch","commentHome","comment","comments","commentsLoading","getComments","response","get","data","success","type","payload","error","commentContextData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SACEC,MADF,EAEEC,oBAFF,EAGEC,uBAHF,QAIO,aAJP;;AAMA,OAAO,MAAMC,cAAc,gBAAGN,aAAa,EAApC;;AAEP,MAAMO,sBAAsB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC/C;AACA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BT,UAAU,CAACC,cAAD,EAAiB;AAC1DS,IAAAA,WAAW,EAAE,EAD6C;AAE1DC,IAAAA,OAAO,EAAE,EAFiD;AAG1DC,IAAAA,QAAQ,EAAE,EAHgD;AAI1DC,IAAAA,eAAe,EAAE;AAJyC,GAAjB,CAA3C,CAF+C,CAS/C;;AACA,QAAMC,WAAW,GAAG,YAAY;AAC9B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,GAAEd,MAAO,oBAApB,CAAvB;;AACA,UAAIa,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBT,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAEf,uBADC;AAEPgB,UAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcL;AAFhB,SAAD,CAAR;AAID;AACF,KARD,CAQE,OAAOS,KAAP,EAAc;AACdZ,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAEhB;AAAR,OAAD,CAAR;AACD;AACF,GAZD,CAV+C,CAwB/C;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACA,QAAMmB,kBAAkB,GAAG;AACzBd,IAAAA,YADyB;AAEzBM,IAAAA,WAFyB,CAGzB;AACA;;AAJyB,GAA3B;AAMA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEQ,kBAAhC;AAAA,eACG,GADH,EAEGf,QAFH,EAEa,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzDD;;GAAMD,sB;;KAAAA,sB;AA2DN,eAAeA,sBAAf","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useReducer } from \"react\";\r\nimport { commentReducer } from \"../reducers/commentReducer\";\r\nimport {\r\n  apiUrl,\r\n  COMMENTS_LOADED_FAIL,\r\n  COMMENTS_LOADED_SUCCESS,\r\n} from \"./constants\";\r\n\r\nexport const CommentContext = createContext();\r\n\r\nconst CommentContextProvider = ({ children }) => {\r\n  // State\r\n  const [commentState, dispatch] = useReducer(commentReducer, {\r\n    commentHome: {},\r\n    comment: {},\r\n    comments: [],\r\n    commentsLoading: true,\r\n  });\r\n\r\n  // Get all posts\r\n  const getComments = async () => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/comments/datacmts`);\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: COMMENTS_LOADED_SUCCESS,\r\n          payload: response.data.comments,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: COMMENTS_LOADED_FAIL });\r\n    }\r\n  };\r\n\r\n  //   // Find id comment when user is updating post\r\n  //   const findIDComment = (commentId) => {\r\n  //     const comment = commentState.comments.find(\r\n  //       (comment) => comment._id === commentId\r\n  //     );\r\n  //     dispatch({ type: COMMENT_CLICK, payload: comment });\r\n  //   };\r\n\r\n  //   useEffect(() => getComments(), []);\r\n  //   // Find id comment when user click play comment\r\n  //   const getIdCommentHome = (commentIdHome) => {\r\n  //     const commentGet = commentState.comments.find(\r\n  //       (comment) => comment._id === commentIdHome\r\n  //     );\r\n  //     dispatch({\r\n  //       type: COMMENT_CLICK_HOME,\r\n  //       payload: commentGet,\r\n  //     });\r\n  //   };\r\n\r\n  // comment context data\r\n  const commentContextData = {\r\n    commentState,\r\n    getComments,\r\n    // findIDComment,\r\n    // getIdCommentHome,\r\n  };\r\n  return (\r\n    <CommentContext.Provider value={commentContextData}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </CommentContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CommentContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}