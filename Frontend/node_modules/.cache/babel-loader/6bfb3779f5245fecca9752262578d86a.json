{"ast":null,"code":"var _jsxFileName = \"F:\\\\Greenwich\\\\Greenwich\\\\Topup\\\\Final\\\\Social media final project\\\\Frontend\\\\src\\\\contexts\\\\userContext.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { createContext, useReducer } from \"react\";\nimport { userReducer } from \"../reducers/userReducer\";\nimport { apiUrl, UPDATE_USER, USERS_LOADED_FAIL, USERS_LOADED_SUCCESS } from \"./constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\nconst UserContextProvider = ({\n  children\n}) => {\n  _s();\n\n  // State\n  const [userState, dispatch] = useReducer(userReducer, {\n    user: null,\n    users: [],\n    usersLoading: true\n  }); // get full user\n\n  const getUsers = async user => {\n    try {\n      const response = await axios.get(`${apiUrl}/music`);\n\n      if (response.data.success) {\n        dispatch({\n          type: USERS_LOADED_SUCCESS,\n          payload: response.data.musics\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: USERS_LOADED_FAIL\n      });\n    }\n  }; // user context data\n\n\n  const userContextData = {\n    userState\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: userContextData,\n    children: [\" \", children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserContextProvider, \"iQQc6Y2RoQgd4QOie3WylLYm9Fs=\");\n\n_c = UserContextProvider;\nexport default UserContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserContextProvider\");","map":{"version":3,"sources":["F:/Greenwich/Greenwich/Topup/Final/Social media final project/Frontend/src/contexts/userContext.js"],"names":["axios","createContext","useReducer","userReducer","apiUrl","UPDATE_USER","USERS_LOADED_FAIL","USERS_LOADED_SUCCESS","UserContext","UserContextProvider","children","userState","dispatch","user","users","usersLoading","getUsers","response","get","data","success","type","payload","musics","error","userContextData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,iBAHF,EAIEC,oBAJF,QAKO,aALP;;AAOA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;;AAEP,MAAMQ,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBV,UAAU,CAACC,WAAD,EAAc;AACpDU,IAAAA,IAAI,EAAE,IAD8C;AAEpDC,IAAAA,KAAK,EAAE,EAF6C;AAGpDC,IAAAA,YAAY,EAAE;AAHsC,GAAd,CAAxC,CAF4C,CAQ5C;;AACA,QAAMC,QAAQ,GAAG,MAAOH,IAAP,IAAgB;AAC/B,QAAI;AACF,YAAMI,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CAAW,GAAEd,MAAO,QAApB,CAAvB;;AACA,UAAIa,QAAQ,CAACE,IAAT,CAAcC,OAAlB,EAA2B;AACzBR,QAAAA,QAAQ,CAAC;AACPS,UAAAA,IAAI,EAAEd,oBADC;AAEPe,UAAAA,OAAO,EAAEL,QAAQ,CAACE,IAAT,CAAcI;AAFhB,SAAD,CAAR;AAID;AACF,KARD,CAQE,OAAOC,KAAP,EAAc;AACdZ,MAAAA,QAAQ,CAAC;AAAES,QAAAA,IAAI,EAAEf;AAAR,OAAD,CAAR;AACD;AACF,GAZD,CAT4C,CAuB5C;;;AACA,QAAMmB,eAAe,GAAG;AACtBd,IAAAA;AADsB,GAAxB;AAGA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEc,eAA7B;AAAA,eACG,GADH,EAEGf,QAFH,EAEa,GAFb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAjCD;;GAAMD,mB;;KAAAA,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, useReducer } from \"react\";\r\nimport { userReducer } from \"../reducers/userReducer\";\r\nimport {\r\n  apiUrl,\r\n  UPDATE_USER,\r\n  USERS_LOADED_FAIL,\r\n  USERS_LOADED_SUCCESS,\r\n} from \"./constants\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nconst UserContextProvider = ({ children }) => {\r\n  // State\r\n  const [userState, dispatch] = useReducer(userReducer, {\r\n    user: null,\r\n    users: [],\r\n    usersLoading: true,\r\n  });\r\n\r\n  // get full user\r\n  const getUsers = async (user) => {\r\n    try {\r\n      const response = await axios.get(`${apiUrl}/music`);\r\n      if (response.data.success) {\r\n        dispatch({\r\n          type: USERS_LOADED_SUCCESS,\r\n          payload: response.data.musics,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: USERS_LOADED_FAIL });\r\n    }\r\n  };\r\n\r\n  // user context data\r\n  const userContextData = {\r\n    userState,\r\n  };\r\n  return (\r\n    <UserContext.Provider value={userContextData}>\r\n      {\" \"}\r\n      {children}{\" \"}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport default UserContextProvider;\r\n"]},"metadata":{},"sourceType":"module"}